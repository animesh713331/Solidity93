{
	"id": "ca31222184e80d2706b740ecd4ea98aa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"SIH_Project Contract/CertRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\n/**\r\n * @title CertRegistry\r\n * @dev This contract manages the immutable registry of verified certificates and records.\r\n * Access is restricted to designated roles (Admin, Faculty, Department).\r\n */\r\ncontract CertRegistry is AccessControl {\r\n    // --- Roles ---\r\n    // The admin role can manage other roles\r\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\r\n    \r\n    // Faculty role for issuing student records\r\n    bytes32 public constant FACULTY_ROLE = keccak256(\"FACULTY_ROLE\");\r\n    \r\n    // Department role for issuing student records and institutional reports (NAAC)\r\n    bytes32 public constant DEPARTMENT_ROLE = keccak256(\"DEPARTMENT_ROLE\");\r\n\r\n    // --- State Variables ---\r\n    // Mapping from a unique record ID hash to the record details\r\n    mapping(bytes32 => Record) private records;\r\n\r\n    // --- Data Structures ---\r\n    struct Record {\r\n        address issuerAddress;\r\n        bytes32 fileHash;\r\n        uint256 issuedAt;\r\n        bool revoked;\r\n    }\r\n\r\n    // --- Events ---\r\n    // Emitted when a new record is successfully issued.\r\n    event RecordIssued(\r\n        bytes32 indexed recordIdHash,\r\n        address indexed issuer,\r\n        bytes32 fileHash,\r\n        uint256 issuedAt\r\n    );\r\n\r\n    // Emitted when a record is revoked.\r\n    event RecordRevoked(\r\n        bytes32 indexed recordIdHash,\r\n        address indexed revoker,\r\n        uint256 revokedAt\r\n    );\r\n\r\n    // --- Constructor ---\r\n    /**\r\n     * @dev The contract deployer is set as the initial admin.\r\n     */\r\n    constructor() {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(ADMIN_ROLE, msg.sender);\r\n    }\r\n\r\n    // --- Role Management (Admin only) ---\r\n    /**\r\n     * @dev Adds a new address to the list of Faculty.\r\n     * @param faculty The address to be added.\r\n     */\r\n    function addFaculty(address faculty) external onlyRole(ADMIN_ROLE) {\r\n        _grantRole(FACULTY_ROLE, faculty);\r\n    }\r\n\r\n    /**\r\n     * @dev Adds a new address to the list of Departments.\r\n     * @param department The address to be added.\r\n     */\r\n    function addDepartment(address department) external onlyRole(ADMIN_ROLE) {\r\n        _grantRole(DEPARTMENT_ROLE, department);\r\n    }\r\n    \r\n    // --- Core Functions ---\r\n    /**\r\n     * @notice Issues a new student or general record.\r\n     * @dev Only Faculty or Department can call this function.\r\n     * @param _recordIdHash The unique hash of the off-chain record ID.\r\n     * @param _fileHash The hash of the file (e.g., PDF) being certified.\r\n     */\r\n    function issueRecord(\r\n        bytes32 _recordIdHash,\r\n        bytes32 _fileHash\r\n    ) external {\r\n        // Correctly check for multiple roles using a require statement.\r\n        require(hasRole(FACULTY_ROLE, msg.sender) || hasRole(DEPARTMENT_ROLE, msg.sender), \r\n            \"Caller is not a registered Faculty or Department\");\r\n        require(records[_recordIdHash].issuedAt == 0, \"Record already exists\");\r\n\r\n        records[_recordIdHash] = Record({\r\n            issuerAddress: msg.sender,\r\n            fileHash: _fileHash,\r\n            issuedAt: block.timestamp,\r\n            revoked: false\r\n        });\r\n\r\n        emit RecordIssued(_recordIdHash, msg.sender, _fileHash, block.timestamp);\r\n    }\r\n    \r\n    /**\r\n     * @notice Issues a new institutional record, such as a NAAC report.\r\n     * @dev Only a registered admin can call this function.\r\n     * @param _recordIdHash The unique hash of the off-chain report ID.\r\n     * @param _fileHash The hash of the PDF report itself.\r\n     */\r\n    function issueInstitutionalRecord(\r\n        bytes32 _recordIdHash,\r\n        bytes32 _fileHash\r\n    ) external onlyRole(ADMIN_ROLE) {\r\n        require(records[_recordIdHash].issuedAt == 0, \"Record already exists\");\r\n\r\n        records[_recordIdHash] = Record({\r\n            issuerAddress: msg.sender,\r\n            fileHash: _fileHash,\r\n            issuedAt: block.timestamp,\r\n            revoked: false\r\n        });\r\n        \r\n        emit RecordIssued(_recordIdHash, msg.sender, _fileHash, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @notice Revokes an existing record.\r\n     * @dev Can only be called by the original issuer or a contract admin.\r\n     * @param _recordIdHash The unique hash of the off-chain record ID.\r\n     */\r\n    function revokeRecord(bytes32 _recordIdHash) external {\r\n        Record storage r = records[_recordIdHash];\r\n        require(r.issuedAt != 0, \"Record does not exist\");\r\n        \r\n        // Use hasRole for clear access control check\r\n        require(hasRole(ADMIN_ROLE, msg.sender) || (r.issuerAddress == msg.sender), \r\n            \"Not authorized to revoke\");\r\n        require(!r.revoked, \"Record is already revoked\");\r\n\r\n        r.revoked = true;\r\n        emit RecordRevoked(_recordIdHash, msg.sender, block.timestamp);\r\n    }\r\n\r\n    function getRecord(bytes32 _recordIdHash) external view returns (\r\n        address issuer,\r\n        bytes32 fileHash,\r\n        uint256 issuedAt,\r\n        bool revoked\r\n    ) {\r\n        Record storage r = records[_recordIdHash];\r\n        return (r.issuerAddress, r.fileHash, r.issuedAt, r.revoked);\r\n    }\r\n\r\n    /**\r\n     * @notice Verifies a record's existence and authenticity.\r\n     * @dev This function is critical for off-chain verification processes.\r\n     * @param _recordIdHash The unique hash of the off-chain record ID.\r\n     * @param _fileHash The hash of the file to verify.\r\n     * @return A boolean indicating if the record is valid, and a boolean if it has been revoked.\r\n     */\r\n    function verifyRecord(bytes32 _recordIdHash, bytes32 _fileHash) external view returns (bool, bool) {\r\n        Record storage r = records[_recordIdHash];\r\n        bool isAuthentic = (r.issuedAt != 0 && r.fileHash == _fileHash);\r\n        return (isAuthentic, r.revoked);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SIH_Project Contract/CertRegistry.sol": {
				"CertRegistry": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "recordIdHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "fileHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "issuedAt",
									"type": "uint256"
								}
							],
							"name": "RecordIssued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "recordIdHash",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "revoker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "revokedAt",
									"type": "uint256"
								}
							],
							"name": "RecordRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEPARTMENT_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FACULTY_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "department",
									"type": "address"
								}
							],
							"name": "addDepartment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "faculty",
									"type": "address"
								}
							],
							"name": "addFaculty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_recordIdHash",
									"type": "bytes32"
								}
							],
							"name": "getRecord",
							"outputs": [
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "fileHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "issuedAt",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "revoked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_recordIdHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_fileHash",
									"type": "bytes32"
								}
							],
							"name": "issueInstitutionalRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_recordIdHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_fileHash",
									"type": "bytes32"
								}
							],
							"name": "issueRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_recordIdHash",
									"type": "bytes32"
								}
							],
							"name": "revokeRecord",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_recordIdHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_fileHash",
									"type": "bytes32"
								}
							],
							"name": "verifyRecord",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract manages the immutable registry of verified certificates and records. Access is restricted to designated roles (Admin, Faculty, Department).",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"addDepartment(address)": {
								"details": "Adds a new address to the list of Departments.",
								"params": {
									"department": "The address to be added."
								}
							},
							"addFaculty(address)": {
								"details": "Adds a new address to the list of Faculty.",
								"params": {
									"faculty": "The address to be added."
								}
							},
							"constructor": {
								"details": "The contract deployer is set as the initial admin."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"issueInstitutionalRecord(bytes32,bytes32)": {
								"details": "Only a registered admin can call this function.",
								"params": {
									"_fileHash": "The hash of the PDF report itself.",
									"_recordIdHash": "The unique hash of the off-chain report ID."
								}
							},
							"issueRecord(bytes32,bytes32)": {
								"details": "Only Faculty or Department can call this function.",
								"params": {
									"_fileHash": "The hash of the file (e.g., PDF) being certified.",
									"_recordIdHash": "The unique hash of the off-chain record ID."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRecord(bytes32)": {
								"details": "Can only be called by the original issuer or a contract admin.",
								"params": {
									"_recordIdHash": "The unique hash of the off-chain record ID."
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"verifyRecord(bytes32,bytes32)": {
								"details": "This function is critical for off-chain verification processes.",
								"params": {
									"_fileHash": "The hash of the file to verify.",
									"_recordIdHash": "The unique hash of the off-chain record ID."
								},
								"returns": {
									"_0": "A boolean indicating if the record is valid, and a boolean if it has been revoked."
								}
							}
						},
						"title": "CertRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SIH_Project Contract/CertRegistry.sol\":324:5910  contract CertRegistry is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"SIH_Project Contract/CertRegistry.sol\":1651:1771  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"SIH_Project Contract/CertRegistry.sol\":1676:1718  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"SIH_Project Contract/CertRegistry.sol\":1687:1705  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"SIH_Project Contract/CertRegistry.sol\":1707:1717  msg.sender */\n  caller\n    /* \"SIH_Project Contract/CertRegistry.sol\":1676:1686  _grantRole */\n  shl(0x20, tag_5)\n    /* \"SIH_Project Contract/CertRegistry.sol\":1676:1718  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n  pop\n    /* \"SIH_Project Contract/CertRegistry.sol\":1729:1763  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_6\n    /* \"SIH_Project Contract/CertRegistry.sol\":475:498  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"SIH_Project Contract/CertRegistry.sol\":1752:1762  msg.sender */\n  caller\n    /* \"SIH_Project Contract/CertRegistry.sol\":1729:1739  _grantRole */\n  shl(0x20, tag_5)\n    /* \"SIH_Project Contract/CertRegistry.sol\":1729:1763  _grantRole(ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n  pop\n    /* \"SIH_Project Contract/CertRegistry.sol\":324:5910  contract CertRegistry is AccessControl {... */\n  jump(tag_7)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_12\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  pop\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_8:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"SIH_Project Contract/CertRegistry.sol\":324:5910  contract CertRegistry is AccessControl {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SIH_Project Contract/CertRegistry.sol\":324:5910  contract CertRegistry is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x69ff43fc\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x996dc022\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x996dc022\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc616c979\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf838585f\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x69ff43fc\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6fe3ceb8\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x36568abe\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x396ff3ed\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3e478509\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x63e44e2f\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x213681cd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SIH_Project Contract/CertRegistry.sol\":4932:5236  function getRecord(bytes32 _recordIdHash) external view returns (... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_7:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"SIH_Project Contract/CertRegistry.sol\":1946:2065  function addFaculty(address faculty) external onlyRole(ADMIN_ROLE) {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"SIH_Project Contract/CertRegistry.sol\":2662:3366  function issueRecord(... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"SIH_Project Contract/CertRegistry.sol\":2202:2333  function addDepartment(address department) external onlyRole(ADMIN_ROLE) {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"SIH_Project Contract/CertRegistry.sol\":3664:4177  function issueInstitutionalRecord(... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"SIH_Project Contract/CertRegistry.sol\":560:624  bytes32 public constant FACULTY_ROLE = keccak256(\"FACULTY_ROLE\") */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SIH_Project Contract/CertRegistry.sol\":438:498  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SIH_Project Contract/CertRegistry.sol\":722:792  bytes32 public constant DEPARTMENT_ROLE = keccak256(\"DEPARTMENT_ROLE\") */\n    tag_15:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_16:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SIH_Project Contract/CertRegistry.sol\":4396:4924  function revokeRecord(bytes32 _recordIdHash) external {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_18:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"SIH_Project Contract/CertRegistry.sol\":5632:5907  function verifyRecord(bytes32 _recordIdHash, bytes32 _fileHash) external view returns (bool, bool) {... */\n    tag_19:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap3\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_89\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_90\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_91\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"SIH_Project Contract/CertRegistry.sol\":4932:5236  function getRecord(bytes32 _recordIdHash) external view returns (... */\n    tag_32:\n        /* \"SIH_Project Contract/CertRegistry.sol\":5007:5021  address issuer */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":5032:5048  bytes32 fileHash */\n      dup1\n        /* \"SIH_Project Contract/CertRegistry.sol\":5059:5075  uint256 issuedAt */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":5086:5098  bool revoked */\n      dup1\n        /* \"SIH_Project Contract/CertRegistry.sol\":5117:5133  Record storage r */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":5136:5143  records */\n      0x01\n        /* \"SIH_Project Contract/CertRegistry.sol\":5136:5158  records[_recordIdHash] */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":5144:5157  _recordIdHash */\n      dup8\n        /* \"SIH_Project Contract/CertRegistry.sol\":5136:5158  records[_recordIdHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SIH_Project Contract/CertRegistry.sol\":5117:5158  Record storage r = records[_recordIdHash] */\n      swap1\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":5177:5178  r */\n      dup1\n        /* \"SIH_Project Contract/CertRegistry.sol\":5177:5192  r.issuerAddress */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SIH_Project Contract/CertRegistry.sol\":5194:5195  r */\n      dup2\n        /* \"SIH_Project Contract/CertRegistry.sol\":5194:5204  r.fileHash */\n      0x01\n      add\n      sload\n        /* \"SIH_Project Contract/CertRegistry.sol\":5206:5207  r */\n      dup3\n        /* \"SIH_Project Contract/CertRegistry.sol\":5206:5216  r.issuedAt */\n      0x02\n      add\n      sload\n        /* \"SIH_Project Contract/CertRegistry.sol\":5218:5219  r */\n      dup4\n        /* \"SIH_Project Contract/CertRegistry.sol\":5218:5227  r.revoked */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SIH_Project Contract/CertRegistry.sol\":5169:5228  return (r.issuerAddress, r.fileHash, r.issuedAt, r.revoked) */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":4932:5236  function getRecord(bytes32 _recordIdHash) external view returns (... */\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_37\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_99:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_105\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_106\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_105:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SIH_Project Contract/CertRegistry.sol\":1946:2065  function addFaculty(address faculty) external onlyRole(ADMIN_ROLE) {... */\n    tag_50:\n        /* \"SIH_Project Contract/CertRegistry.sol\":475:498  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_108:\n        /* \"SIH_Project Contract/CertRegistry.sol\":2024:2057  _grantRole(FACULTY_ROLE, faculty) */\n      tag_110\n        /* \"SIH_Project Contract/CertRegistry.sol\":599:624  keccak256(\"FACULTY_ROLE\") */\n      0xf3f9cfff7b46f415da5a492b1718971da203f87c6aae9299e7b408eb83ef8bee\n        /* \"SIH_Project Contract/CertRegistry.sol\":2049:2056  faculty */\n      dup4\n        /* \"SIH_Project Contract/CertRegistry.sol\":2024:2034  _grantRole */\n      tag_100\n        /* \"SIH_Project Contract/CertRegistry.sol\":2024:2057  _grantRole(FACULTY_ROLE, faculty) */\n      jump\t// in\n    tag_110:\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":1946:2065  function addFaculty(address faculty) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SIH_Project Contract/CertRegistry.sol\":2662:3366  function issueRecord(... */\n    tag_54:\n        /* \"SIH_Project Contract/CertRegistry.sol\":2852:2885  hasRole(FACULTY_ROLE, msg.sender) */\n      tag_112\n        /* \"SIH_Project Contract/CertRegistry.sol\":599:624  keccak256(\"FACULTY_ROLE\") */\n      0xf3f9cfff7b46f415da5a492b1718971da203f87c6aae9299e7b408eb83ef8bee\n        /* \"SIH_Project Contract/CertRegistry.sol\":2874:2884  msg.sender */\n      caller\n        /* \"SIH_Project Contract/CertRegistry.sol\":2852:2859  hasRole */\n      tag_69\n        /* \"SIH_Project Contract/CertRegistry.sol\":2852:2885  hasRole(FACULTY_ROLE, msg.sender) */\n      jump\t// in\n    tag_112:\n        /* \"SIH_Project Contract/CertRegistry.sol\":2852:2925  hasRole(FACULTY_ROLE, msg.sender) || hasRole(DEPARTMENT_ROLE, msg.sender) */\n      dup1\n      tag_113\n      jumpi\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":2889:2925  hasRole(DEPARTMENT_ROLE, msg.sender) */\n      tag_114\n        /* \"SIH_Project Contract/CertRegistry.sol\":764:792  keccak256(\"DEPARTMENT_ROLE\") */\n      0xe7837d04f36ce0b2f3cc662bf1b2b632a7fbd12ae95199e8bd3dcfbcc440b66b\n        /* \"SIH_Project Contract/CertRegistry.sol\":2914:2924  msg.sender */\n      caller\n        /* \"SIH_Project Contract/CertRegistry.sol\":2889:2896  hasRole */\n      tag_69\n        /* \"SIH_Project Contract/CertRegistry.sol\":2889:2925  hasRole(DEPARTMENT_ROLE, msg.sender) */\n      jump\t// in\n    tag_114:\n        /* \"SIH_Project Contract/CertRegistry.sol\":2852:2925  hasRole(FACULTY_ROLE, msg.sender) || hasRole(DEPARTMENT_ROLE, msg.sender) */\n    tag_113:\n        /* \"SIH_Project Contract/CertRegistry.sol\":2844:2992  require(hasRole(FACULTY_ROLE, msg.sender) || hasRole(DEPARTMENT_ROLE, msg.sender), ... */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"SIH_Project Contract/CertRegistry.sol\":3046:3047  0 */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":3011:3018  records */\n      0x01\n        /* \"SIH_Project Contract/CertRegistry.sol\":3011:3033  records[_recordIdHash] */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":3019:3032  _recordIdHash */\n      dup5\n        /* \"SIH_Project Contract/CertRegistry.sol\":3011:3033  records[_recordIdHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SIH_Project Contract/CertRegistry.sol\":3011:3042  records[_recordIdHash].issuedAt */\n      0x02\n      add\n      sload\n        /* \"SIH_Project Contract/CertRegistry.sol\":3011:3047  records[_recordIdHash].issuedAt == 0 */\n      eq\n        /* \"SIH_Project Contract/CertRegistry.sol\":3003:3073  require(records[_recordIdHash].issuedAt == 0, \"Record already exists\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"SIH_Project Contract/CertRegistry.sol\":3111:3273  Record({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"SIH_Project Contract/CertRegistry.sol\":3148:3158  msg.sender */\n      caller\n        /* \"SIH_Project Contract/CertRegistry.sol\":3111:3273  Record({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SIH_Project Contract/CertRegistry.sol\":3183:3192  _fileHash */\n      dup3\n        /* \"SIH_Project Contract/CertRegistry.sol\":3111:3273  Record({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SIH_Project Contract/CertRegistry.sol\":3217:3232  block.timestamp */\n      timestamp\n        /* \"SIH_Project Contract/CertRegistry.sol\":3111:3273  Record({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SIH_Project Contract/CertRegistry.sol\":3256:3261  false */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":3111:3273  Record({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":3086:3093  records */\n      0x01\n        /* \"SIH_Project Contract/CertRegistry.sol\":3086:3108  records[_recordIdHash] */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":3094:3107  _recordIdHash */\n      dup5\n        /* \"SIH_Project Contract/CertRegistry.sol\":3086:3108  records[_recordIdHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SIH_Project Contract/CertRegistry.sol\":3086:3273  records[_recordIdHash] = Record({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":3319:3329  msg.sender */\n      caller\n        /* \"SIH_Project Contract/CertRegistry.sol\":3291:3358  RecordIssued(_recordIdHash, msg.sender, _fileHash, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SIH_Project Contract/CertRegistry.sol\":3304:3317  _recordIdHash */\n      dup3\n        /* \"SIH_Project Contract/CertRegistry.sol\":3291:3358  RecordIssued(_recordIdHash, msg.sender, _fileHash, block.timestamp) */\n      0x9f98e4a6a613f74715f54d5326cf01190330375c17b05ecd29e22646ba8b14c3\n        /* \"SIH_Project Contract/CertRegistry.sol\":3331:3340  _fileHash */\n      dup4\n        /* \"SIH_Project Contract/CertRegistry.sol\":3342:3357  block.timestamp */\n      timestamp\n        /* \"SIH_Project Contract/CertRegistry.sol\":3291:3358  RecordIssued(_recordIdHash, msg.sender, _fileHash, block.timestamp) */\n      mload(0x40)\n      tag_121\n      swap3\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"SIH_Project Contract/CertRegistry.sol\":2662:3366  function issueRecord(... */\n      pop\n      pop\n      jump\t// out\n        /* \"SIH_Project Contract/CertRegistry.sol\":2202:2333  function addDepartment(address department) external onlyRole(ADMIN_ROLE) {... */\n    tag_57:\n        /* \"SIH_Project Contract/CertRegistry.sol\":475:498  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_124:\n        /* \"SIH_Project Contract/CertRegistry.sol\":2286:2325  _grantRole(DEPARTMENT_ROLE, department) */\n      tag_126\n        /* \"SIH_Project Contract/CertRegistry.sol\":764:792  keccak256(\"DEPARTMENT_ROLE\") */\n      0xe7837d04f36ce0b2f3cc662bf1b2b632a7fbd12ae95199e8bd3dcfbcc440b66b\n        /* \"SIH_Project Contract/CertRegistry.sol\":2314:2324  department */\n      dup4\n        /* \"SIH_Project Contract/CertRegistry.sol\":2286:2296  _grantRole */\n      tag_100\n        /* \"SIH_Project Contract/CertRegistry.sol\":2286:2325  _grantRole(DEPARTMENT_ROLE, department) */\n      jump\t// in\n    tag_126:\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":2202:2333  function addDepartment(address department) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SIH_Project Contract/CertRegistry.sol\":3664:4177  function issueInstitutionalRecord(... */\n    tag_60:\n        /* \"SIH_Project Contract/CertRegistry.sol\":475:498  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_128\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_128:\n        /* \"SIH_Project Contract/CertRegistry.sol\":3849:3850  0 */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":3814:3821  records */\n      0x01\n        /* \"SIH_Project Contract/CertRegistry.sol\":3814:3836  records[_recordIdHash] */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":3822:3835  _recordIdHash */\n      dup6\n        /* \"SIH_Project Contract/CertRegistry.sol\":3814:3836  records[_recordIdHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SIH_Project Contract/CertRegistry.sol\":3814:3845  records[_recordIdHash].issuedAt */\n      0x02\n      add\n      sload\n        /* \"SIH_Project Contract/CertRegistry.sol\":3814:3850  records[_recordIdHash].issuedAt == 0 */\n      eq\n        /* \"SIH_Project Contract/CertRegistry.sol\":3806:3876  require(records[_recordIdHash].issuedAt == 0, \"Record already exists\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_120\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"SIH_Project Contract/CertRegistry.sol\":3914:4076  Record({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"SIH_Project Contract/CertRegistry.sol\":3951:3961  msg.sender */\n      caller\n        /* \"SIH_Project Contract/CertRegistry.sol\":3914:4076  Record({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SIH_Project Contract/CertRegistry.sol\":3986:3995  _fileHash */\n      dup4\n        /* \"SIH_Project Contract/CertRegistry.sol\":3914:4076  Record({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SIH_Project Contract/CertRegistry.sol\":4020:4035  block.timestamp */\n      timestamp\n        /* \"SIH_Project Contract/CertRegistry.sol\":3914:4076  Record({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"SIH_Project Contract/CertRegistry.sol\":4059:4064  false */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":3914:4076  Record({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":3889:3896  records */\n      0x01\n        /* \"SIH_Project Contract/CertRegistry.sol\":3889:3911  records[_recordIdHash] */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":3897:3910  _recordIdHash */\n      dup6\n        /* \"SIH_Project Contract/CertRegistry.sol\":3889:3911  records[_recordIdHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SIH_Project Contract/CertRegistry.sol\":3889:4076  records[_recordIdHash] = Record({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":4130:4140  msg.sender */\n      caller\n        /* \"SIH_Project Contract/CertRegistry.sol\":4102:4169  RecordIssued(_recordIdHash, msg.sender, _fileHash, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SIH_Project Contract/CertRegistry.sol\":4115:4128  _recordIdHash */\n      dup4\n        /* \"SIH_Project Contract/CertRegistry.sol\":4102:4169  RecordIssued(_recordIdHash, msg.sender, _fileHash, block.timestamp) */\n      0x9f98e4a6a613f74715f54d5326cf01190330375c17b05ecd29e22646ba8b14c3\n        /* \"SIH_Project Contract/CertRegistry.sol\":4142:4151  _fileHash */\n      dup5\n        /* \"SIH_Project Contract/CertRegistry.sol\":4153:4168  block.timestamp */\n      timestamp\n        /* \"SIH_Project Contract/CertRegistry.sol\":4102:4169  RecordIssued(_recordIdHash, msg.sender, _fileHash, block.timestamp) */\n      mload(0x40)\n      tag_132\n      swap3\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"SIH_Project Contract/CertRegistry.sol\":3664:4177  function issueInstitutionalRecord(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SIH_Project Contract/CertRegistry.sol\":560:624  bytes32 public constant FACULTY_ROLE = keccak256(\"FACULTY_ROLE\") */\n    tag_62:\n        /* \"SIH_Project Contract/CertRegistry.sol\":599:624  keccak256(\"FACULTY_ROLE\") */\n      0xf3f9cfff7b46f415da5a492b1718971da203f87c6aae9299e7b408eb83ef8bee\n        /* \"SIH_Project Contract/CertRegistry.sol\":560:624  bytes32 public constant FACULTY_ROLE = keccak256(\"FACULTY_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"SIH_Project Contract/CertRegistry.sol\":438:498  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_65:\n        /* \"SIH_Project Contract/CertRegistry.sol\":475:498  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"SIH_Project Contract/CertRegistry.sol\":438:498  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SIH_Project Contract/CertRegistry.sol\":722:792  bytes32 public constant DEPARTMENT_ROLE = keccak256(\"DEPARTMENT_ROLE\") */\n    tag_72:\n        /* \"SIH_Project Contract/CertRegistry.sol\":764:792  keccak256(\"DEPARTMENT_ROLE\") */\n      0xe7837d04f36ce0b2f3cc662bf1b2b632a7fbd12ae95199e8bd3dcfbcc440b66b\n        /* \"SIH_Project Contract/CertRegistry.sol\":722:792  bytes32 public constant DEPARTMENT_ROLE = keccak256(\"DEPARTMENT_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"SIH_Project Contract/CertRegistry.sol\":4396:4924  function revokeRecord(bytes32 _recordIdHash) external {... */\n    tag_79:\n        /* \"SIH_Project Contract/CertRegistry.sol\":4461:4477  Record storage r */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":4480:4487  records */\n      0x01\n        /* \"SIH_Project Contract/CertRegistry.sol\":4480:4502  records[_recordIdHash] */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":4488:4501  _recordIdHash */\n      dup4\n        /* \"SIH_Project Contract/CertRegistry.sol\":4480:4502  records[_recordIdHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SIH_Project Contract/CertRegistry.sol\":4461:4502  Record storage r = records[_recordIdHash] */\n      swap1\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":4535:4536  0 */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":4521:4522  r */\n      dup2\n        /* \"SIH_Project Contract/CertRegistry.sol\":4521:4531  r.issuedAt */\n      0x02\n      add\n      sload\n        /* \"SIH_Project Contract/CertRegistry.sol\":4521:4536  r.issuedAt != 0 */\n      sub\n        /* \"SIH_Project Contract/CertRegistry.sol\":4513:4562  require(r.issuedAt != 0, \"Record does not exist\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"SIH_Project Contract/CertRegistry.sol\":4646:4677  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_138\n        /* \"SIH_Project Contract/CertRegistry.sol\":475:498  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"SIH_Project Contract/CertRegistry.sol\":4666:4676  msg.sender */\n      caller\n        /* \"SIH_Project Contract/CertRegistry.sol\":4646:4653  hasRole */\n      tag_69\n        /* \"SIH_Project Contract/CertRegistry.sol\":4646:4677  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_138:\n        /* \"SIH_Project Contract/CertRegistry.sol\":4646:4712  hasRole(ADMIN_ROLE, msg.sender) || (r.issuerAddress == msg.sender) */\n      dup1\n      tag_139\n      jumpi\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":4701:4711  msg.sender */\n      caller\n        /* \"SIH_Project Contract/CertRegistry.sol\":4682:4711  r.issuerAddress == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SIH_Project Contract/CertRegistry.sol\":4682:4683  r */\n      dup2\n        /* \"SIH_Project Contract/CertRegistry.sol\":4682:4697  r.issuerAddress */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SIH_Project Contract/CertRegistry.sol\":4682:4711  r.issuerAddress == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"SIH_Project Contract/CertRegistry.sol\":4646:4712  hasRole(ADMIN_ROLE, msg.sender) || (r.issuerAddress == msg.sender) */\n    tag_139:\n        /* \"SIH_Project Contract/CertRegistry.sol\":4638:4755  require(hasRole(ADMIN_ROLE, msg.sender) || (r.issuerAddress == msg.sender), ... */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"SIH_Project Contract/CertRegistry.sol\":4775:4776  r */\n      dup1\n        /* \"SIH_Project Contract/CertRegistry.sol\":4775:4784  r.revoked */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SIH_Project Contract/CertRegistry.sol\":4774:4784  !r.revoked */\n      iszero\n        /* \"SIH_Project Contract/CertRegistry.sol\":4766:4814  require(!r.revoked, \"Record is already revoked\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"SIH_Project Contract/CertRegistry.sol\":4839:4843  true */\n      0x01\n        /* \"SIH_Project Contract/CertRegistry.sol\":4827:4828  r */\n      dup2\n        /* \"SIH_Project Contract/CertRegistry.sol\":4827:4836  r.revoked */\n      0x03\n      add\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":4827:4843  r.revoked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":4888:4898  msg.sender */\n      caller\n        /* \"SIH_Project Contract/CertRegistry.sol\":4859:4916  RecordRevoked(_recordIdHash, msg.sender, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SIH_Project Contract/CertRegistry.sol\":4873:4886  _recordIdHash */\n      dup3\n        /* \"SIH_Project Contract/CertRegistry.sol\":4859:4916  RecordRevoked(_recordIdHash, msg.sender, block.timestamp) */\n      0xab038451d440a6c29bbaaae9f567b253be209b045b7b76daffaa0a4b38f784a0\n        /* \"SIH_Project Contract/CertRegistry.sol\":4900:4915  block.timestamp */\n      timestamp\n        /* \"SIH_Project Contract/CertRegistry.sol\":4859:4916  RecordRevoked(_recordIdHash, msg.sender, block.timestamp) */\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"SIH_Project Contract/CertRegistry.sol\":4450:4924  {... */\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":4396:4924  function revokeRecord(bytes32 _recordIdHash) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_148\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_37\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_106\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_152:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SIH_Project Contract/CertRegistry.sol\":5632:5907  function verifyRecord(bytes32 _recordIdHash, bytes32 _fileHash) external view returns (bool, bool) {... */\n    tag_85:\n        /* \"SIH_Project Contract/CertRegistry.sol\":5719:5723  bool */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":5725:5729  bool */\n      dup1\n        /* \"SIH_Project Contract/CertRegistry.sol\":5742:5758  Record storage r */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":5761:5768  records */\n      0x01\n        /* \"SIH_Project Contract/CertRegistry.sol\":5761:5783  records[_recordIdHash] */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":5769:5782  _recordIdHash */\n      dup7\n        /* \"SIH_Project Contract/CertRegistry.sol\":5761:5783  records[_recordIdHash] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SIH_Project Contract/CertRegistry.sol\":5742:5783  Record storage r = records[_recordIdHash] */\n      swap1\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":5794:5810  bool isAuthentic */\n      0x00\n        /* \"SIH_Project Contract/CertRegistry.sol\":5828:5829  0 */\n      dup1\n        /* \"SIH_Project Contract/CertRegistry.sol\":5814:5815  r */\n      dup3\n        /* \"SIH_Project Contract/CertRegistry.sol\":5814:5824  r.issuedAt */\n      0x02\n      add\n      sload\n        /* \"SIH_Project Contract/CertRegistry.sol\":5814:5829  r.issuedAt != 0 */\n      eq\n      iszero\n        /* \"SIH_Project Contract/CertRegistry.sol\":5814:5856  r.issuedAt != 0 && r.fileHash == _fileHash */\n      dup1\n      iszero\n      tag_154\n      jumpi\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":5847:5856  _fileHash */\n      dup5\n        /* \"SIH_Project Contract/CertRegistry.sol\":5833:5834  r */\n      dup3\n        /* \"SIH_Project Contract/CertRegistry.sol\":5833:5843  r.fileHash */\n      0x01\n      add\n      sload\n        /* \"SIH_Project Contract/CertRegistry.sol\":5833:5856  r.fileHash == _fileHash */\n      eq\n        /* \"SIH_Project Contract/CertRegistry.sol\":5814:5856  r.issuedAt != 0 && r.fileHash == _fileHash */\n    tag_154:\n        /* \"SIH_Project Contract/CertRegistry.sol\":5794:5857  bool isAuthentic = (r.issuedAt != 0 && r.fileHash == _fileHash) */\n      swap1\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":5876:5887  isAuthentic */\n      dup1\n        /* \"SIH_Project Contract/CertRegistry.sol\":5889:5890  r */\n      dup3\n        /* \"SIH_Project Contract/CertRegistry.sol\":5889:5898  r.revoked */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SIH_Project Contract/CertRegistry.sol\":5868:5899  return (isAuthentic, r.revoked) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"SIH_Project Contract/CertRegistry.sol\":5632:5907  function verifyRecord(bytes32 _recordIdHash, bytes32 _fileHash) external view returns (bool, bool) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_157\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_69\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_160)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_160:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_69\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_103\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_166)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_166:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_172\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_69\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap3\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_177:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_179:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_180:\n        /* \"#utility.yul\":561:584   */\n      tag_212\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_179\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_213:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_181:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_215\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_180\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_25:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_218\n      tag_177\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":833:952   */\n    tag_217:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_219\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_181\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_182:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_183:\n        /* \"#utility.yul\":1268:1289   */\n      tag_222\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_182\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_28:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_224\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_183\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_184:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_185:\n        /* \"#utility.yul\":1674:1698   */\n      tag_227\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_184\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_228\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_228:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_186:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_230\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_185\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_31:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_233\n      tag_177\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1950:2069   */\n    tag_232:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_234\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_186\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2335   */\n    tag_187:\n        /* \"#utility.yul\":2246:2253   */\n      0x00\n        /* \"#utility.yul\":2286:2328   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2279:2284   */\n      dup3\n        /* \"#utility.yul\":2275:2329   */\n      and\n        /* \"#utility.yul\":2264:2329   */\n      swap1\n      pop\n        /* \"#utility.yul\":2209:2335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2341:2437   */\n    tag_188:\n        /* \"#utility.yul\":2378:2385   */\n      0x00\n        /* \"#utility.yul\":2407:2431   */\n      tag_237\n        /* \"#utility.yul\":2425:2430   */\n      dup3\n        /* \"#utility.yul\":2407:2431   */\n      tag_187\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2396:2431   */\n      swap1\n      pop\n        /* \"#utility.yul\":2341:2437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2561   */\n    tag_189:\n        /* \"#utility.yul\":2530:2554   */\n      tag_239\n        /* \"#utility.yul\":2548:2553   */\n      dup2\n        /* \"#utility.yul\":2530:2554   */\n      tag_188\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2525:2528   */\n      dup3\n        /* \"#utility.yul\":2518:2555   */\n      mstore\n        /* \"#utility.yul\":2443:2561   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2567:2685   */\n    tag_190:\n        /* \"#utility.yul\":2654:2678   */\n      tag_241\n        /* \"#utility.yul\":2672:2677   */\n      dup2\n        /* \"#utility.yul\":2654:2678   */\n      tag_184\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2649:2652   */\n      dup3\n        /* \"#utility.yul\":2642:2679   */\n      mstore\n        /* \"#utility.yul\":2567:2685   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2691:2768   */\n    tag_191:\n        /* \"#utility.yul\":2728:2735   */\n      0x00\n        /* \"#utility.yul\":2757:2762   */\n      dup2\n        /* \"#utility.yul\":2746:2762   */\n      swap1\n      pop\n        /* \"#utility.yul\":2691:2768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2774:2892   */\n    tag_192:\n        /* \"#utility.yul\":2861:2885   */\n      tag_244\n        /* \"#utility.yul\":2879:2884   */\n      dup2\n        /* \"#utility.yul\":2861:2885   */\n      tag_191\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2856:2859   */\n      dup3\n        /* \"#utility.yul\":2849:2886   */\n      mstore\n        /* \"#utility.yul\":2774:2892   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2898:3439   */\n    tag_34:\n        /* \"#utility.yul\":3069:3073   */\n      0x00\n        /* \"#utility.yul\":3107:3110   */\n      0x80\n        /* \"#utility.yul\":3096:3105   */\n      dup3\n        /* \"#utility.yul\":3092:3111   */\n      add\n        /* \"#utility.yul\":3084:3111   */\n      swap1\n      pop\n        /* \"#utility.yul\":3121:3192   */\n      tag_246\n        /* \"#utility.yul\":3189:3190   */\n      0x00\n        /* \"#utility.yul\":3178:3187   */\n      dup4\n        /* \"#utility.yul\":3174:3191   */\n      add\n        /* \"#utility.yul\":3165:3171   */\n      dup8\n        /* \"#utility.yul\":3121:3192   */\n      tag_189\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3202:3274   */\n      tag_247\n        /* \"#utility.yul\":3270:3272   */\n      0x20\n        /* \"#utility.yul\":3259:3268   */\n      dup4\n        /* \"#utility.yul\":3255:3273   */\n      add\n        /* \"#utility.yul\":3246:3252   */\n      dup7\n        /* \"#utility.yul\":3202:3274   */\n      tag_190\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3284:3356   */\n      tag_248\n        /* \"#utility.yul\":3352:3354   */\n      0x40\n        /* \"#utility.yul\":3341:3350   */\n      dup4\n        /* \"#utility.yul\":3337:3355   */\n      add\n        /* \"#utility.yul\":3328:3334   */\n      dup6\n        /* \"#utility.yul\":3284:3356   */\n      tag_192\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3366:3432   */\n      tag_249\n        /* \"#utility.yul\":3428:3430   */\n      0x60\n        /* \"#utility.yul\":3417:3426   */\n      dup4\n        /* \"#utility.yul\":3413:3431   */\n      add\n        /* \"#utility.yul\":3404:3410   */\n      dup5\n        /* \"#utility.yul\":3366:3432   */\n      tag_183\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2898:3439   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3445:3667   */\n    tag_39:\n        /* \"#utility.yul\":3538:3542   */\n      0x00\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"#utility.yul\":3565:3574   */\n      dup3\n        /* \"#utility.yul\":3561:3579   */\n      add\n        /* \"#utility.yul\":3553:3579   */\n      swap1\n      pop\n        /* \"#utility.yul\":3589:3660   */\n      tag_251\n        /* \"#utility.yul\":3657:3658   */\n      0x00\n        /* \"#utility.yul\":3646:3655   */\n      dup4\n        /* \"#utility.yul\":3642:3659   */\n      add\n        /* \"#utility.yul\":3633:3639   */\n      dup5\n        /* \"#utility.yul\":3589:3660   */\n      tag_190\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3445:3667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3673:3795   */\n    tag_193:\n        /* \"#utility.yul\":3746:3770   */\n      tag_253\n        /* \"#utility.yul\":3764:3769   */\n      dup2\n        /* \"#utility.yul\":3746:3770   */\n      tag_188\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":3739:3744   */\n      dup2\n        /* \"#utility.yul\":3736:3771   */\n      eq\n        /* \"#utility.yul\":3726:3789   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":3785:3786   */\n      0x00\n        /* \"#utility.yul\":3782:3783   */\n      dup1\n        /* \"#utility.yul\":3775:3787   */\n      revert\n        /* \"#utility.yul\":3726:3789   */\n    tag_254:\n        /* \"#utility.yul\":3673:3795   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3801:3940   */\n    tag_194:\n        /* \"#utility.yul\":3847:3852   */\n      0x00\n        /* \"#utility.yul\":3885:3891   */\n      dup2\n        /* \"#utility.yul\":3872:3892   */\n      calldataload\n        /* \"#utility.yul\":3863:3892   */\n      swap1\n      pop\n        /* \"#utility.yul\":3901:3934   */\n      tag_256\n        /* \"#utility.yul\":3928:3933   */\n      dup2\n        /* \"#utility.yul\":3901:3934   */\n      tag_193\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3801:3940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3946:4420   */\n    tag_42:\n        /* \"#utility.yul\":4014:4020   */\n      0x00\n        /* \"#utility.yul\":4022:4028   */\n      dup1\n        /* \"#utility.yul\":4071:4073   */\n      0x40\n        /* \"#utility.yul\":4059:4068   */\n      dup4\n        /* \"#utility.yul\":4050:4057   */\n      dup6\n        /* \"#utility.yul\":4046:4069   */\n      sub\n        /* \"#utility.yul\":4042:4074   */\n      slt\n        /* \"#utility.yul\":4039:4158   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":4077:4156   */\n      tag_259\n      tag_177\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4039:4158   */\n    tag_258:\n        /* \"#utility.yul\":4197:4198   */\n      0x00\n        /* \"#utility.yul\":4222:4275   */\n      tag_260\n        /* \"#utility.yul\":4267:4274   */\n      dup6\n        /* \"#utility.yul\":4258:4264   */\n      dup3\n        /* \"#utility.yul\":4247:4256   */\n      dup7\n        /* \"#utility.yul\":4243:4265   */\n      add\n        /* \"#utility.yul\":4222:4275   */\n      tag_186\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4212:4275   */\n      swap3\n      pop\n        /* \"#utility.yul\":4168:4285   */\n      pop\n        /* \"#utility.yul\":4324:4326   */\n      0x20\n        /* \"#utility.yul\":4350:4403   */\n      tag_261\n        /* \"#utility.yul\":4395:4402   */\n      dup6\n        /* \"#utility.yul\":4386:4392   */\n      dup3\n        /* \"#utility.yul\":4375:4384   */\n      dup7\n        /* \"#utility.yul\":4371:4393   */\n      add\n        /* \"#utility.yul\":4350:4403   */\n      tag_194\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":4340:4403   */\n      swap2\n      pop\n        /* \"#utility.yul\":4295:4413   */\n      pop\n        /* \"#utility.yul\":3946:4420   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4426:4755   */\n    tag_49:\n        /* \"#utility.yul\":4485:4491   */\n      0x00\n        /* \"#utility.yul\":4534:4536   */\n      0x20\n        /* \"#utility.yul\":4522:4531   */\n      dup3\n        /* \"#utility.yul\":4513:4520   */\n      dup5\n        /* \"#utility.yul\":4509:4532   */\n      sub\n        /* \"#utility.yul\":4505:4537   */\n      slt\n        /* \"#utility.yul\":4502:4621   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":4540:4619   */\n      tag_264\n      tag_177\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":4502:4621   */\n    tag_263:\n        /* \"#utility.yul\":4660:4661   */\n      0x00\n        /* \"#utility.yul\":4685:4738   */\n      tag_265\n        /* \"#utility.yul\":4730:4737   */\n      dup5\n        /* \"#utility.yul\":4721:4727   */\n      dup3\n        /* \"#utility.yul\":4710:4719   */\n      dup6\n        /* \"#utility.yul\":4706:4728   */\n      add\n        /* \"#utility.yul\":4685:4738   */\n      tag_194\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4675:4738   */\n      swap2\n      pop\n        /* \"#utility.yul\":4631:4748   */\n      pop\n        /* \"#utility.yul\":4426:4755   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4761:5235   */\n    tag_53:\n        /* \"#utility.yul\":4829:4835   */\n      0x00\n        /* \"#utility.yul\":4837:4843   */\n      dup1\n        /* \"#utility.yul\":4886:4888   */\n      0x40\n        /* \"#utility.yul\":4874:4883   */\n      dup4\n        /* \"#utility.yul\":4865:4872   */\n      dup6\n        /* \"#utility.yul\":4861:4884   */\n      sub\n        /* \"#utility.yul\":4857:4889   */\n      slt\n        /* \"#utility.yul\":4854:4973   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":4892:4971   */\n      tag_268\n      tag_177\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":4854:4973   */\n    tag_267:\n        /* \"#utility.yul\":5012:5013   */\n      0x00\n        /* \"#utility.yul\":5037:5090   */\n      tag_269\n        /* \"#utility.yul\":5082:5089   */\n      dup6\n        /* \"#utility.yul\":5073:5079   */\n      dup3\n        /* \"#utility.yul\":5062:5071   */\n      dup7\n        /* \"#utility.yul\":5058:5080   */\n      add\n        /* \"#utility.yul\":5037:5090   */\n      tag_186\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5027:5090   */\n      swap3\n      pop\n        /* \"#utility.yul\":4983:5100   */\n      pop\n        /* \"#utility.yul\":5139:5141   */\n      0x20\n        /* \"#utility.yul\":5165:5218   */\n      tag_270\n        /* \"#utility.yul\":5210:5217   */\n      dup6\n        /* \"#utility.yul\":5201:5207   */\n      dup3\n        /* \"#utility.yul\":5190:5199   */\n      dup7\n        /* \"#utility.yul\":5186:5208   */\n      add\n        /* \"#utility.yul\":5165:5218   */\n      tag_186\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5155:5218   */\n      swap2\n      pop\n        /* \"#utility.yul\":5110:5228   */\n      pop\n        /* \"#utility.yul\":4761:5235   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5241:5549   */\n    tag_87:\n        /* \"#utility.yul\":5350:5354   */\n      0x00\n        /* \"#utility.yul\":5388:5390   */\n      0x40\n        /* \"#utility.yul\":5377:5386   */\n      dup3\n        /* \"#utility.yul\":5373:5391   */\n      add\n        /* \"#utility.yul\":5365:5391   */\n      swap1\n      pop\n        /* \"#utility.yul\":5401:5466   */\n      tag_272\n        /* \"#utility.yul\":5463:5464   */\n      0x00\n        /* \"#utility.yul\":5452:5461   */\n      dup4\n        /* \"#utility.yul\":5448:5465   */\n      add\n        /* \"#utility.yul\":5439:5445   */\n      dup6\n        /* \"#utility.yul\":5401:5466   */\n      tag_183\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5476:5542   */\n      tag_273\n        /* \"#utility.yul\":5538:5540   */\n      0x20\n        /* \"#utility.yul\":5527:5536   */\n      dup4\n        /* \"#utility.yul\":5523:5541   */\n      add\n        /* \"#utility.yul\":5514:5520   */\n      dup5\n        /* \"#utility.yul\":5476:5542   */\n      tag_183\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":5241:5549   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5555:5724   */\n    tag_195:\n        /* \"#utility.yul\":5639:5650   */\n      0x00\n        /* \"#utility.yul\":5673:5679   */\n      dup3\n        /* \"#utility.yul\":5668:5671   */\n      dup3\n        /* \"#utility.yul\":5661:5680   */\n      mstore\n        /* \"#utility.yul\":5713:5717   */\n      0x20\n        /* \"#utility.yul\":5708:5711   */\n      dup3\n        /* \"#utility.yul\":5704:5718   */\n      add\n        /* \"#utility.yul\":5689:5718   */\n      swap1\n      pop\n        /* \"#utility.yul\":5555:5724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5730:5965   */\n    tag_196:\n        /* \"#utility.yul\":5870:5904   */\n      0x43616c6c6572206973206e6f742061207265676973746572656420466163756c\n        /* \"#utility.yul\":5866:5867   */\n      0x00\n        /* \"#utility.yul\":5858:5864   */\n      dup3\n        /* \"#utility.yul\":5854:5868   */\n      add\n        /* \"#utility.yul\":5847:5905   */\n      mstore\n        /* \"#utility.yul\":5939:5957   */\n      0x7479206f72204465706172746d656e7400000000000000000000000000000000\n        /* \"#utility.yul\":5934:5936   */\n      0x20\n        /* \"#utility.yul\":5926:5932   */\n      dup3\n        /* \"#utility.yul\":5922:5937   */\n      add\n        /* \"#utility.yul\":5915:5958   */\n      mstore\n        /* \"#utility.yul\":5730:5965   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5971:6337   */\n    tag_197:\n        /* \"#utility.yul\":6113:6116   */\n      0x00\n        /* \"#utility.yul\":6134:6201   */\n      tag_277\n        /* \"#utility.yul\":6198:6200   */\n      0x30\n        /* \"#utility.yul\":6193:6196   */\n      dup4\n        /* \"#utility.yul\":6134:6201   */\n      tag_195\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":6127:6201   */\n      swap2\n      pop\n        /* \"#utility.yul\":6210:6303   */\n      tag_278\n        /* \"#utility.yul\":6299:6302   */\n      dup3\n        /* \"#utility.yul\":6210:6303   */\n      tag_196\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":6328:6330   */\n      0x40\n        /* \"#utility.yul\":6323:6326   */\n      dup3\n        /* \"#utility.yul\":6319:6331   */\n      add\n        /* \"#utility.yul\":6312:6331   */\n      swap1\n      pop\n        /* \"#utility.yul\":5971:6337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6343:6762   */\n    tag_117:\n        /* \"#utility.yul\":6509:6513   */\n      0x00\n        /* \"#utility.yul\":6547:6549   */\n      0x20\n        /* \"#utility.yul\":6536:6545   */\n      dup3\n        /* \"#utility.yul\":6532:6550   */\n      add\n        /* \"#utility.yul\":6524:6550   */\n      swap1\n      pop\n        /* \"#utility.yul\":6596:6605   */\n      dup2\n        /* \"#utility.yul\":6590:6594   */\n      dup2\n        /* \"#utility.yul\":6586:6606   */\n      sub\n        /* \"#utility.yul\":6582:6583   */\n      0x00\n        /* \"#utility.yul\":6571:6580   */\n      dup4\n        /* \"#utility.yul\":6567:6584   */\n      add\n        /* \"#utility.yul\":6560:6607   */\n      mstore\n        /* \"#utility.yul\":6624:6755   */\n      tag_280\n        /* \"#utility.yul\":6750:6754   */\n      dup2\n        /* \"#utility.yul\":6624:6755   */\n      tag_197\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6616:6755   */\n      swap1\n      pop\n        /* \"#utility.yul\":6343:6762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6768:6939   */\n    tag_198:\n        /* \"#utility.yul\":6908:6931   */\n      0x5265636f726420616c7265616479206578697374730000000000000000000000\n        /* \"#utility.yul\":6904:6905   */\n      0x00\n        /* \"#utility.yul\":6896:6902   */\n      dup3\n        /* \"#utility.yul\":6892:6906   */\n      add\n        /* \"#utility.yul\":6885:6932   */\n      mstore\n        /* \"#utility.yul\":6768:6939   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6945:7311   */\n    tag_199:\n        /* \"#utility.yul\":7087:7090   */\n      0x00\n        /* \"#utility.yul\":7108:7175   */\n      tag_283\n        /* \"#utility.yul\":7172:7174   */\n      0x15\n        /* \"#utility.yul\":7167:7170   */\n      dup4\n        /* \"#utility.yul\":7108:7175   */\n      tag_195\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":7101:7175   */\n      swap2\n      pop\n        /* \"#utility.yul\":7184:7277   */\n      tag_284\n        /* \"#utility.yul\":7273:7276   */\n      dup3\n        /* \"#utility.yul\":7184:7277   */\n      tag_198\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7302:7304   */\n      0x20\n        /* \"#utility.yul\":7297:7300   */\n      dup3\n        /* \"#utility.yul\":7293:7305   */\n      add\n        /* \"#utility.yul\":7286:7305   */\n      swap1\n      pop\n        /* \"#utility.yul\":6945:7311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7317:7736   */\n    tag_120:\n        /* \"#utility.yul\":7483:7487   */\n      0x00\n        /* \"#utility.yul\":7521:7523   */\n      0x20\n        /* \"#utility.yul\":7510:7519   */\n      dup3\n        /* \"#utility.yul\":7506:7524   */\n      add\n        /* \"#utility.yul\":7498:7524   */\n      swap1\n      pop\n        /* \"#utility.yul\":7570:7579   */\n      dup2\n        /* \"#utility.yul\":7564:7568   */\n      dup2\n        /* \"#utility.yul\":7560:7580   */\n      sub\n        /* \"#utility.yul\":7556:7557   */\n      0x00\n        /* \"#utility.yul\":7545:7554   */\n      dup4\n        /* \"#utility.yul\":7541:7558   */\n      add\n        /* \"#utility.yul\":7534:7581   */\n      mstore\n        /* \"#utility.yul\":7598:7729   */\n      tag_286\n        /* \"#utility.yul\":7724:7728   */\n      dup2\n        /* \"#utility.yul\":7598:7729   */\n      tag_199\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":7590:7729   */\n      swap1\n      pop\n        /* \"#utility.yul\":7317:7736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7742:8074   */\n    tag_122:\n        /* \"#utility.yul\":7863:7867   */\n      0x00\n        /* \"#utility.yul\":7901:7903   */\n      0x40\n        /* \"#utility.yul\":7890:7899   */\n      dup3\n        /* \"#utility.yul\":7886:7904   */\n      add\n        /* \"#utility.yul\":7878:7904   */\n      swap1\n      pop\n        /* \"#utility.yul\":7914:7985   */\n      tag_288\n        /* \"#utility.yul\":7982:7983   */\n      0x00\n        /* \"#utility.yul\":7971:7980   */\n      dup4\n        /* \"#utility.yul\":7967:7984   */\n      add\n        /* \"#utility.yul\":7958:7964   */\n      dup6\n        /* \"#utility.yul\":7914:7985   */\n      tag_190\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7995:8067   */\n      tag_289\n        /* \"#utility.yul\":8063:8065   */\n      0x20\n        /* \"#utility.yul\":8052:8061   */\n      dup4\n        /* \"#utility.yul\":8048:8066   */\n      add\n        /* \"#utility.yul\":8039:8045   */\n      dup5\n        /* \"#utility.yul\":7995:8067   */\n      tag_192\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":7742:8074   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8080:8251   */\n    tag_200:\n        /* \"#utility.yul\":8220:8243   */\n      0x5265636f726420646f6573206e6f742065786973740000000000000000000000\n        /* \"#utility.yul\":8216:8217   */\n      0x00\n        /* \"#utility.yul\":8208:8214   */\n      dup3\n        /* \"#utility.yul\":8204:8218   */\n      add\n        /* \"#utility.yul\":8197:8244   */\n      mstore\n        /* \"#utility.yul\":8080:8251   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8257:8623   */\n    tag_201:\n        /* \"#utility.yul\":8399:8402   */\n      0x00\n        /* \"#utility.yul\":8420:8487   */\n      tag_292\n        /* \"#utility.yul\":8484:8486   */\n      0x15\n        /* \"#utility.yul\":8479:8482   */\n      dup4\n        /* \"#utility.yul\":8420:8487   */\n      tag_195\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":8413:8487   */\n      swap2\n      pop\n        /* \"#utility.yul\":8496:8589   */\n      tag_293\n        /* \"#utility.yul\":8585:8588   */\n      dup3\n        /* \"#utility.yul\":8496:8589   */\n      tag_200\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8614:8616   */\n      0x20\n        /* \"#utility.yul\":8609:8612   */\n      dup3\n        /* \"#utility.yul\":8605:8617   */\n      add\n        /* \"#utility.yul\":8598:8617   */\n      swap1\n      pop\n        /* \"#utility.yul\":8257:8623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8629:9048   */\n    tag_137:\n        /* \"#utility.yul\":8795:8799   */\n      0x00\n        /* \"#utility.yul\":8833:8835   */\n      0x20\n        /* \"#utility.yul\":8822:8831   */\n      dup3\n        /* \"#utility.yul\":8818:8836   */\n      add\n        /* \"#utility.yul\":8810:8836   */\n      swap1\n      pop\n        /* \"#utility.yul\":8882:8891   */\n      dup2\n        /* \"#utility.yul\":8876:8880   */\n      dup2\n        /* \"#utility.yul\":8872:8892   */\n      sub\n        /* \"#utility.yul\":8868:8869   */\n      0x00\n        /* \"#utility.yul\":8857:8866   */\n      dup4\n        /* \"#utility.yul\":8853:8870   */\n      add\n        /* \"#utility.yul\":8846:8893   */\n      mstore\n        /* \"#utility.yul\":8910:9041   */\n      tag_295\n        /* \"#utility.yul\":9036:9040   */\n      dup2\n        /* \"#utility.yul\":8910:9041   */\n      tag_201\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":8902:9041   */\n      swap1\n      pop\n        /* \"#utility.yul\":8629:9048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9054:9228   */\n    tag_202:\n        /* \"#utility.yul\":9194:9220   */\n      0x4e6f7420617574686f72697a656420746f207265766f6b650000000000000000\n        /* \"#utility.yul\":9190:9191   */\n      0x00\n        /* \"#utility.yul\":9182:9188   */\n      dup3\n        /* \"#utility.yul\":9178:9192   */\n      add\n        /* \"#utility.yul\":9171:9221   */\n      mstore\n        /* \"#utility.yul\":9054:9228   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9234:9600   */\n    tag_203:\n        /* \"#utility.yul\":9376:9379   */\n      0x00\n        /* \"#utility.yul\":9397:9464   */\n      tag_298\n        /* \"#utility.yul\":9461:9463   */\n      0x18\n        /* \"#utility.yul\":9456:9459   */\n      dup4\n        /* \"#utility.yul\":9397:9464   */\n      tag_195\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":9390:9464   */\n      swap2\n      pop\n        /* \"#utility.yul\":9473:9566   */\n      tag_299\n        /* \"#utility.yul\":9562:9565   */\n      dup3\n        /* \"#utility.yul\":9473:9566   */\n      tag_202\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9591:9593   */\n      0x20\n        /* \"#utility.yul\":9586:9589   */\n      dup3\n        /* \"#utility.yul\":9582:9594   */\n      add\n        /* \"#utility.yul\":9575:9594   */\n      swap1\n      pop\n        /* \"#utility.yul\":9234:9600   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9606:10025   */\n    tag_142:\n        /* \"#utility.yul\":9772:9776   */\n      0x00\n        /* \"#utility.yul\":9810:9812   */\n      0x20\n        /* \"#utility.yul\":9799:9808   */\n      dup3\n        /* \"#utility.yul\":9795:9813   */\n      add\n        /* \"#utility.yul\":9787:9813   */\n      swap1\n      pop\n        /* \"#utility.yul\":9859:9868   */\n      dup2\n        /* \"#utility.yul\":9853:9857   */\n      dup2\n        /* \"#utility.yul\":9849:9869   */\n      sub\n        /* \"#utility.yul\":9845:9846   */\n      0x00\n        /* \"#utility.yul\":9834:9843   */\n      dup4\n        /* \"#utility.yul\":9830:9847   */\n      add\n        /* \"#utility.yul\":9823:9870   */\n      mstore\n        /* \"#utility.yul\":9887:10018   */\n      tag_301\n        /* \"#utility.yul\":10013:10017   */\n      dup2\n        /* \"#utility.yul\":9887:10018   */\n      tag_203\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":9879:10018   */\n      swap1\n      pop\n        /* \"#utility.yul\":9606:10025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10031:10206   */\n    tag_204:\n        /* \"#utility.yul\":10171:10198   */\n      0x5265636f726420697320616c7265616479207265766f6b656400000000000000\n        /* \"#utility.yul\":10167:10168   */\n      0x00\n        /* \"#utility.yul\":10159:10165   */\n      dup3\n        /* \"#utility.yul\":10155:10169   */\n      add\n        /* \"#utility.yul\":10148:10199   */\n      mstore\n        /* \"#utility.yul\":10031:10206   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10212:10578   */\n    tag_205:\n        /* \"#utility.yul\":10354:10357   */\n      0x00\n        /* \"#utility.yul\":10375:10442   */\n      tag_304\n        /* \"#utility.yul\":10439:10441   */\n      0x19\n        /* \"#utility.yul\":10434:10437   */\n      dup4\n        /* \"#utility.yul\":10375:10442   */\n      tag_195\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":10368:10442   */\n      swap2\n      pop\n        /* \"#utility.yul\":10451:10544   */\n      tag_305\n        /* \"#utility.yul\":10540:10543   */\n      dup3\n        /* \"#utility.yul\":10451:10544   */\n      tag_204\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10569:10571   */\n      0x20\n        /* \"#utility.yul\":10564:10567   */\n      dup3\n        /* \"#utility.yul\":10560:10572   */\n      add\n        /* \"#utility.yul\":10553:10572   */\n      swap1\n      pop\n        /* \"#utility.yul\":10212:10578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10584:11003   */\n    tag_145:\n        /* \"#utility.yul\":10750:10754   */\n      0x00\n        /* \"#utility.yul\":10788:10790   */\n      0x20\n        /* \"#utility.yul\":10777:10786   */\n      dup3\n        /* \"#utility.yul\":10773:10791   */\n      add\n        /* \"#utility.yul\":10765:10791   */\n      swap1\n      pop\n        /* \"#utility.yul\":10837:10846   */\n      dup2\n        /* \"#utility.yul\":10831:10835   */\n      dup2\n        /* \"#utility.yul\":10827:10847   */\n      sub\n        /* \"#utility.yul\":10823:10824   */\n      0x00\n        /* \"#utility.yul\":10812:10821   */\n      dup4\n        /* \"#utility.yul\":10808:10825   */\n      add\n        /* \"#utility.yul\":10801:10848   */\n      mstore\n        /* \"#utility.yul\":10865:10996   */\n      tag_307\n        /* \"#utility.yul\":10991:10995   */\n      dup2\n        /* \"#utility.yul\":10865:10996   */\n      tag_205\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":10857:10996   */\n      swap1\n      pop\n        /* \"#utility.yul\":10584:11003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11009:11231   */\n    tag_147:\n        /* \"#utility.yul\":11102:11106   */\n      0x00\n        /* \"#utility.yul\":11140:11142   */\n      0x20\n        /* \"#utility.yul\":11129:11138   */\n      dup3\n        /* \"#utility.yul\":11125:11143   */\n      add\n        /* \"#utility.yul\":11117:11143   */\n      swap1\n      pop\n        /* \"#utility.yul\":11153:11224   */\n      tag_309\n        /* \"#utility.yul\":11221:11222   */\n      0x00\n        /* \"#utility.yul\":11210:11219   */\n      dup4\n        /* \"#utility.yul\":11206:11223   */\n      add\n        /* \"#utility.yul\":11197:11203   */\n      dup5\n        /* \"#utility.yul\":11153:11224   */\n      tag_192\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":11009:11231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11237:11569   */\n    tag_175:\n        /* \"#utility.yul\":11358:11362   */\n      0x00\n        /* \"#utility.yul\":11396:11398   */\n      0x40\n        /* \"#utility.yul\":11385:11394   */\n      dup3\n        /* \"#utility.yul\":11381:11399   */\n      add\n        /* \"#utility.yul\":11373:11399   */\n      swap1\n      pop\n        /* \"#utility.yul\":11409:11480   */\n      tag_311\n        /* \"#utility.yul\":11477:11478   */\n      0x00\n        /* \"#utility.yul\":11466:11475   */\n      dup4\n        /* \"#utility.yul\":11462:11479   */\n      add\n        /* \"#utility.yul\":11453:11459   */\n      dup6\n        /* \"#utility.yul\":11409:11480   */\n      tag_189\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":11490:11562   */\n      tag_312\n        /* \"#utility.yul\":11558:11560   */\n      0x20\n        /* \"#utility.yul\":11547:11556   */\n      dup4\n        /* \"#utility.yul\":11543:11561   */\n      add\n        /* \"#utility.yul\":11534:11540   */\n      dup5\n        /* \"#utility.yul\":11490:11562   */\n      tag_190\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":11237:11569   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220402416f16745134f3992dbc94482cd83de07d362a5e68947d1b57d95f11a9cdc64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_515": {
									"entryPoint": null,
									"id": 515,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 95,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_391": {
									"entryPoint": 445,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": 346,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50620000255f801b336200005f60201b60201c565b50620000587fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336200005f60201b60201c565b50620001c4565b5f6200007283836200015a60201b60201c565b620001505760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620000ec620001bd60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905062000154565b5f90505b92915050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b6114b880620001d25f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c806369ff43fc116100a0578063996dc0221161006f578063996dc022146102b4578063a217fddf146102d2578063c616c979146102f0578063d547741f1461030c578063f838585f1461032857610109565b806369ff43fc1461022c5780636fe3ceb81461024857806375b238fc1461026657806391d148541461028457610109565b806336568abe116100dc57806336568abe146101bc578063396ff3ed146101d85780633e478509146101f457806363e44e2f1461021057610109565b806301ffc9a71461010d578063213681cd1461013d578063248a9ca3146101705780632f2ff15d146101a0575b5f80fd5b61012760048036038101906101229190610f67565b610359565b6040516101349190610fac565b60405180910390f35b61015760048036038101906101529190610ff8565b6103d2565b6040516101679493929190611089565b60405180910390f35b61018a60048036038101906101859190610ff8565b610438565b60405161019791906110cc565b60405180910390f35b6101ba60048036038101906101b5919061110f565b610454565b005b6101d660048036038101906101d1919061110f565b610476565b005b6101f260048036038101906101ed919061114d565b6104f1565b005b61020e60048036038101906102099190611178565b61054a565b005b61022a6004803603810190610225919061114d565b610753565b005b61024660048036038101906102419190611178565b6107ac565b005b610250610946565b60405161025d91906110cc565b60405180910390f35b61026e61096a565b60405161027b91906110cc565b60405180910390f35b61029e6004803603810190610299919061110f565b61098e565b6040516102ab9190610fac565b60405180910390f35b6102bc6109f1565b6040516102c991906110cc565b60405180910390f35b6102da610a15565b6040516102e791906110cc565b60405180910390f35b61030a60048036038101906103059190610ff8565b610a1b565b005b6103266004803603810190610321919061110f565b610bf6565b005b610342600480360381019061033d9190611178565b610c18565b6040516103509291906111b6565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103cb57506103ca82610c67565b5b9050919050565b5f805f805f60015f8781526020019081526020015f209050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600101548260020154836003015f9054906101000a900460ff169450945094509450509193509193565b5f805f8381526020019081526020015f20600101549050919050565b61045d82610438565b61046681610cd0565b6104708383610ce4565b50505050565b61047e610dcd565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104e2576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104ec8282610dd4565b505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561051b81610cd0565b6105457ff3f9cfff7b46f415da5a492b1718971da203f87c6aae9299e7b408eb83ef8bee83610ce4565b505050565b6105747ff3f9cfff7b46f415da5a492b1718971da203f87c6aae9299e7b408eb83ef8bee3361098e565b806105a557506105a47fe7837d04f36ce0b2f3cc662bf1b2b632a7fbd12ae95199e8bd3dcfbcc440b66b3361098e565b5b6105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db9061125d565b60405180910390fd5b5f60015f8481526020019081526020015f20600201541461063a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610631906112c5565b60405180910390fd5b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020014281526020015f151581525060015f8481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16827f9f98e4a6a613f74715f54d5326cf01190330375c17b05ecd29e22646ba8b14c383426040516107479291906112e3565b60405180910390a35050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561077d81610cd0565b6107a77fe7837d04f36ce0b2f3cc662bf1b2b632a7fbd12ae95199e8bd3dcfbcc440b66b83610ce4565b505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756107d681610cd0565b5f60015f8581526020019081526020015f20600201541461082c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610823906112c5565b60405180910390fd5b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020014281526020015f151581525060015f8581526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16837f9f98e4a6a613f74715f54d5326cf01190330375c17b05ecd29e22646ba8b14c384426040516109399291906112e3565b60405180910390a3505050565b7ff3f9cfff7b46f415da5a492b1718971da203f87c6aae9299e7b408eb83ef8bee81565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7fe7837d04f36ce0b2f3cc662bf1b2b632a7fbd12ae95199e8bd3dcfbcc440b66b81565b5f801b81565b5f60015f8381526020019081526020015f2090505f816002015403610a75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6c90611354565b60405180910390fd5b610a9f7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361098e565b80610af757503373ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610b36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2d906113bc565b60405180910390fd5b806003015f9054906101000a900460ff1615610b87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7e90611424565b60405180910390fd5b6001816003015f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16827fab038451d440a6c29bbaaae9f567b253be209b045b7b76daffaa0a4b38f784a042604051610bea9190611442565b60405180910390a35050565b610bff82610438565b610c0881610cd0565b610c128383610dd4565b50505050565b5f805f60015f8681526020019081526020015f2090505f80826002015414158015610c465750848260010154145b905080826003015f9054906101000a900460ff169350935050509250929050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610ce181610cdc610dcd565b610ebd565b50565b5f610cef838361098e565b610dc35760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610d60610dcd565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610dc7565b5f90505b92915050565b5f33905090565b5f610ddf838361098e565b15610eb3575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610e50610dcd565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610eb7565b5f90505b92915050565b610ec7828261098e565b610f0a5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610f0192919061145b565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f4681610f12565b8114610f50575f80fd5b50565b5f81359050610f6181610f3d565b92915050565b5f60208284031215610f7c57610f7b610f0e565b5b5f610f8984828501610f53565b91505092915050565b5f8115159050919050565b610fa681610f92565b82525050565b5f602082019050610fbf5f830184610f9d565b92915050565b5f819050919050565b610fd781610fc5565b8114610fe1575f80fd5b50565b5f81359050610ff281610fce565b92915050565b5f6020828403121561100d5761100c610f0e565b5b5f61101a84828501610fe4565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61104c82611023565b9050919050565b61105c81611042565b82525050565b61106b81610fc5565b82525050565b5f819050919050565b61108381611071565b82525050565b5f60808201905061109c5f830187611053565b6110a96020830186611062565b6110b6604083018561107a565b6110c36060830184610f9d565b95945050505050565b5f6020820190506110df5f830184611062565b92915050565b6110ee81611042565b81146110f8575f80fd5b50565b5f81359050611109816110e5565b92915050565b5f806040838503121561112557611124610f0e565b5b5f61113285828601610fe4565b9250506020611143858286016110fb565b9150509250929050565b5f6020828403121561116257611161610f0e565b5b5f61116f848285016110fb565b91505092915050565b5f806040838503121561118e5761118d610f0e565b5b5f61119b85828601610fe4565b92505060206111ac85828601610fe4565b9150509250929050565b5f6040820190506111c95f830185610f9d565b6111d66020830184610f9d565b9392505050565b5f82825260208201905092915050565b7f43616c6c6572206973206e6f742061207265676973746572656420466163756c5f8201527f7479206f72204465706172746d656e7400000000000000000000000000000000602082015250565b5f6112476030836111dd565b9150611252826111ed565b604082019050919050565b5f6020820190508181035f8301526112748161123b565b9050919050565b7f5265636f726420616c72656164792065786973747300000000000000000000005f82015250565b5f6112af6015836111dd565b91506112ba8261127b565b602082019050919050565b5f6020820190508181035f8301526112dc816112a3565b9050919050565b5f6040820190506112f65f830185611062565b611303602083018461107a565b9392505050565b7f5265636f726420646f6573206e6f7420657869737400000000000000000000005f82015250565b5f61133e6015836111dd565b91506113498261130a565b602082019050919050565b5f6020820190508181035f83015261136b81611332565b9050919050565b7f4e6f7420617574686f72697a656420746f207265766f6b6500000000000000005f82015250565b5f6113a66018836111dd565b91506113b182611372565b602082019050919050565b5f6020820190508181035f8301526113d38161139a565b9050919050565b7f5265636f726420697320616c7265616479207265766f6b6564000000000000005f82015250565b5f61140e6019836111dd565b9150611419826113da565b602082019050919050565b5f6020820190508181035f83015261143b81611402565b9050919050565b5f6020820190506114555f83018461107a565b92915050565b5f60408201905061146e5f830185611053565b61147b6020830184611062565b939250505056fea2646970667358221220402416f16745134f3992dbc94482cd83de07d362a5e68947d1b57d95f11a9cdc64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x25 PUSH0 DUP1 SHL CALLER PUSH3 0x5F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x58 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH3 0x5F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1C4 JUMP JUMPDEST PUSH0 PUSH3 0x72 DUP4 DUP4 PUSH3 0x15A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x150 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0xEC PUSH3 0x1BD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x154 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14B8 DUP1 PUSH3 0x1D2 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69FF43FC GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x996DC022 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x996DC022 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xC616C979 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xF838585F EQ PUSH2 0x328 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x69FF43FC EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x6FE3CEB8 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x284 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x396FF3ED EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x3E478509 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x63E44E2F EQ PUSH2 0x210 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x213681CD EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH2 0x753 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x7AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x250 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH2 0x96A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x98E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP3 SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3CB JUMPI POP PUSH2 0x3CA DUP3 PUSH2 0xC67 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x1 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45D DUP3 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x466 DUP2 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x470 DUP4 DUP4 PUSH2 0xCE4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x47E PUSH2 0xDCD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EC DUP3 DUP3 PUSH2 0xDD4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x51B DUP2 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x545 PUSH32 0xF3F9CFFF7B46F415DA5A492B1718971DA203F87C6AAE9299E7B408EB83EF8BEE DUP4 PUSH2 0xCE4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x574 PUSH32 0xF3F9CFFF7B46F415DA5A492B1718971DA203F87C6AAE9299E7B408EB83EF8BEE CALLER PUSH2 0x98E JUMP JUMPDEST DUP1 PUSH2 0x5A5 JUMPI POP PUSH2 0x5A4 PUSH32 0xE7837D04F36CE0B2F3CC662BF1B2B632A7FBD12AE95199E8BD3DCFBCC440B66B CALLER PUSH2 0x98E JUMP JUMPDEST JUMPDEST PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x125D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x631 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x9F98E4A6A613F74715F54D5326CF01190330375C17B05ECD29E22646BA8B14C3 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x747 SWAP3 SWAP2 SWAP1 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x77D DUP2 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x7A7 PUSH32 0xE7837D04F36CE0B2F3CC662BF1B2B632A7FBD12AE95199E8BD3DCFBCC440B66B DUP4 PUSH2 0xCE4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x7D6 DUP2 PUSH2 0xCD0 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x82C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x823 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x9F98E4A6A613F74715F54D5326CF01190330375C17B05ECD29E22646BA8B14C3 DUP5 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x939 SWAP3 SWAP2 SWAP1 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0xF3F9CFFF7B46F415DA5A492B1718971DA203F87C6AAE9299E7B408EB83EF8BEE DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xE7837D04F36CE0B2F3CC662BF1B2B632A7FBD12AE95199E8BD3DCFBCC440B66B DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SUB PUSH2 0xA75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6C SWAP1 PUSH2 0x1354 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9F PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x98E JUMP JUMPDEST DUP1 PUSH2 0xAF7 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xB36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2D SWAP1 PUSH2 0x13BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7E SWAP1 PUSH2 0x1424 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xAB038451D440A6C29BBAAAE9F567B253BE209B045B7B76DAFFAA0A4B38F784A0 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1442 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBFF DUP3 PUSH2 0x438 JUMP JUMPDEST PUSH2 0xC08 DUP2 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0xC12 DUP4 DUP4 PUSH2 0xDD4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x1 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP1 DUP3 PUSH1 0x2 ADD SLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xC46 JUMPI POP DUP5 DUP3 PUSH1 0x1 ADD SLOAD EQ JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE1 DUP2 PUSH2 0xCDC PUSH2 0xDCD JUMP JUMPDEST PUSH2 0xEBD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xCEF DUP4 DUP4 PUSH2 0x98E JUMP JUMPDEST PUSH2 0xDC3 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD60 PUSH2 0xDCD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xDC7 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xDDF DUP4 DUP4 PUSH2 0x98E JUMP JUMPDEST ISZERO PUSH2 0xEB3 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE50 PUSH2 0xDCD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEC7 DUP3 DUP3 PUSH2 0x98E JUMP JUMPDEST PUSH2 0xF0A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF01 SWAP3 SWAP2 SWAP1 PUSH2 0x145B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF46 DUP2 PUSH2 0xF12 JUMP JUMPDEST DUP2 EQ PUSH2 0xF50 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF61 DUP2 PUSH2 0xF3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7C JUMPI PUSH2 0xF7B PUSH2 0xF0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF89 DUP5 DUP3 DUP6 ADD PUSH2 0xF53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA6 DUP2 PUSH2 0xF92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFBF PUSH0 DUP4 ADD DUP5 PUSH2 0xF9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD7 DUP2 PUSH2 0xFC5 JUMP JUMPDEST DUP2 EQ PUSH2 0xFE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFF2 DUP2 PUSH2 0xFCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x100D JUMPI PUSH2 0x100C PUSH2 0xF0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x101A DUP5 DUP3 DUP6 ADD PUSH2 0xFE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x104C DUP3 PUSH2 0x1023 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105C DUP2 PUSH2 0x1042 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x106B DUP2 PUSH2 0xFC5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1083 DUP2 PUSH2 0x1071 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x109C PUSH0 DUP4 ADD DUP8 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x10A9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x10B6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x10C3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xF9D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10DF PUSH0 DUP4 ADD DUP5 PUSH2 0x1062 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10EE DUP2 PUSH2 0x1042 JUMP JUMPDEST DUP2 EQ PUSH2 0x10F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1109 DUP2 PUSH2 0x10E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0xF0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1132 DUP6 DUP3 DUP7 ADD PUSH2 0xFE4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1143 DUP6 DUP3 DUP7 ADD PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1162 JUMPI PUSH2 0x1161 PUSH2 0xF0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x116F DUP5 DUP3 DUP6 ADD PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x118E JUMPI PUSH2 0x118D PUSH2 0xF0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x119B DUP6 DUP3 DUP7 ADD PUSH2 0xFE4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11AC DUP6 DUP3 DUP7 ADD PUSH2 0xFE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11C9 PUSH0 DUP4 ADD DUP6 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0x11D6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF9D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742061207265676973746572656420466163756C PUSH0 DUP3 ADD MSTORE PUSH32 0x7479206F72204465706172746D656E7400000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1247 PUSH1 0x30 DUP4 PUSH2 0x11DD JUMP JUMPDEST SWAP2 POP PUSH2 0x1252 DUP3 PUSH2 0x11ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1274 DUP2 PUSH2 0x123B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265636F726420616C7265616479206578697374730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12AF PUSH1 0x15 DUP4 PUSH2 0x11DD JUMP JUMPDEST SWAP2 POP PUSH2 0x12BA DUP3 PUSH2 0x127B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12DC DUP2 PUSH2 0x12A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12F6 PUSH0 DUP4 ADD DUP6 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x1303 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x107A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265636F726420646F6573206E6F742065786973740000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x133E PUSH1 0x15 DUP4 PUSH2 0x11DD JUMP JUMPDEST SWAP2 POP PUSH2 0x1349 DUP3 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x136B DUP2 PUSH2 0x1332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F207265766F6B650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13A6 PUSH1 0x18 DUP4 PUSH2 0x11DD JUMP JUMPDEST SWAP2 POP PUSH2 0x13B1 DUP3 PUSH2 0x1372 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13D3 DUP2 PUSH2 0x139A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265636F726420697320616C7265616479207265766F6B656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x140E PUSH1 0x19 DUP4 PUSH2 0x11DD JUMP JUMPDEST SWAP2 POP PUSH2 0x1419 DUP3 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x143B DUP2 PUSH2 0x1402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1455 PUSH0 DUP4 ADD DUP5 PUSH2 0x107A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x146E PUSH0 DUP4 ADD DUP6 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x147B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1062 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x24 AND CALL PUSH8 0x45134F3992DBC944 DUP3 0xCD DUP4 0xDE SMOD 0xD3 PUSH3 0xA5E689 SELFBALANCE 0xD1 0xB5 PUSH30 0x95F11A9CDC64736F6C634300081400330000000000000000000000000000 ",
							"sourceMap": "324:5586:5:-:0;;;1651:120;;;;;;;;;;1676:42;2241:4:0;1687:18:5;;1707:10;1676;;;:42;;:::i;:::-;;1729:34;475:23;1752:10;1729;;;:34;;:::i;:::-;;324:5586;;6155:316:0;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2830:136::-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;324:5586:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_456": {
									"entryPoint": 2410,
									"id": 456,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_30": {
									"entryPoint": 2581,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEPARTMENT_ROLE_466": {
									"entryPoint": 2545,
									"id": 466,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@FACULTY_ROLE_461": {
									"entryPoint": 2374,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_115": {
									"entryPoint": 3773,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_94": {
									"entryPoint": 3280,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 3300,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_391": {
									"entryPoint": 3533,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_295": {
									"entryPoint": 3540,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@addDepartment_545": {
									"entryPoint": 1875,
									"id": 545,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addFaculty_530": {
									"entryPoint": 1265,
									"id": 530,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRecord_735": {
									"entryPoint": 978,
									"id": 735,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@getRoleAdmin_129": {
									"entryPoint": 1080,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_148": {
									"entryPoint": 1108,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_81": {
									"entryPoint": 2446,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@issueInstitutionalRecord_645": {
									"entryPoint": 1964,
									"id": 645,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@issueRecord_601": {
									"entryPoint": 1354,
									"id": 601,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceRole_190": {
									"entryPoint": 1142,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRecord_704": {
									"entryPoint": 2587,
									"id": 704,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@revokeRole_167": {
									"entryPoint": 3062,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_432": {
									"entryPoint": 3175,
									"id": 432,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_63": {
									"entryPoint": 857,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@verifyRecord_773": {
									"entryPoint": 3096,
									"id": 773,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_address": {
									"entryPoint": 4347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 4068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_bytes32": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 5211,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bool__to_t_address_t_bytes32_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 4233,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 4300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": 4835,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3854,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22": {
									"entryPoint": 4589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096": {
									"entryPoint": 4874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65": {
									"entryPoint": 5082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429": {
									"entryPoint": 4978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 4046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11572:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:6",
														"type": ""
													}
												],
												"src": "334:149:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:6"
															},
															"nodeType": "YulIf",
															"src": "541:62:6"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:6",
														"type": ""
													}
												],
												"src": "489:120:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:6"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:6",
														"type": ""
													}
												],
												"src": "615:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:6"
															},
															"nodeType": "YulIf",
															"src": "833:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:6",
														"type": ""
													}
												],
												"src": "758:327:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:6",
														"type": ""
													}
												],
												"src": "1091:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:6",
														"type": ""
													}
												],
												"src": "1187:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:6",
														"type": ""
													}
												],
												"src": "1302:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1584:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:6",
														"type": ""
													}
												],
												"src": "1518:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1644:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1701:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1657:43:6"
															},
															"nodeType": "YulIf",
															"src": "1654:63:6"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1637:5:6",
														"type": ""
													}
												],
												"src": "1601:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1781:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1791:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:6"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1759:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1767:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:6",
														"type": ""
													}
												],
												"src": "1729:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1940:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1986:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1953:32:6"
															},
															"nodeType": "YulIf",
															"src": "1950:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2079:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2123:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1910:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1921:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1933:6:6",
														"type": ""
													}
												],
												"src": "1874:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2254:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2264:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2279:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2286:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2275:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2275:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2264:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2236:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2246:7:6",
														"type": ""
													}
												],
												"src": "2209:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2396:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2425:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2407:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2407:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2396:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2368:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2378:7:6",
														"type": ""
													}
												],
												"src": "2341:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2508:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2525:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2548:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2530:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2530:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2518:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2518:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2496:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2503:3:6",
														"type": ""
													}
												],
												"src": "2443:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2632:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2649:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2672:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2654:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2654:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2642:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2642:37:6"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2620:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2627:3:6",
														"type": ""
													}
												],
												"src": "2567:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2746:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2757:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2746:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2718:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2728:7:6",
														"type": ""
													}
												],
												"src": "2691:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2839:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2856:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2879:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2861:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2861:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2849:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2827:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2834:3:6",
														"type": ""
													}
												],
												"src": "2774:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3074:365:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3084:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3096:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3092:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3092:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3084:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3165:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3178:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3189:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3174:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3174:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3121:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3121:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3246:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3259:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3270:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3255:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3255:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3202:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3202:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3202:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3328:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3341:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3352:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3337:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3337:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3284:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3284:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3284:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3404:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3417:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3428:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3413:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3413:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3366:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:66:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3366:66:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bool__to_t_address_t_bytes32_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3022:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3034:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3042:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3050:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3058:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3069:4:6",
														"type": ""
													}
												],
												"src": "2898:541:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3543:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3553:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3561:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3561:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3553:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3633:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3646:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3657:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3642:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3589:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3589:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3515:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3527:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3538:4:6",
														"type": ""
													}
												],
												"src": "3445:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3716:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3773:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3782:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3785:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3775:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3775:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3775:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3739:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3764:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3746:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3746:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3736:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3736:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3729:43:6"
															},
															"nodeType": "YulIf",
															"src": "3726:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3709:5:6",
														"type": ""
													}
												],
												"src": "3673:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3853:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3863:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3885:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3872:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3872:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3863:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3928:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3901:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3901:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3901:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3831:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3839:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3847:5:6",
														"type": ""
													}
												],
												"src": "3801:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4029:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4075:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4077:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4077:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4077:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4050:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4059:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4046:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4046:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4071:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4042:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4042:32:6"
															},
															"nodeType": "YulIf",
															"src": "4039:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4168:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4183:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4197:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4187:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4212:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4247:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4258:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4243:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4243:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4267:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4222:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4222:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4212:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4295:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4310:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4324:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4314:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4340:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4375:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4386:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4371:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4371:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4395:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4350:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4350:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4340:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3991:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4002:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4014:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4022:6:6",
														"type": ""
													}
												],
												"src": "3946:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4492:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4538:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4540:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4540:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4540:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4513:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4522:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4509:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4509:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4534:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4505:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4505:32:6"
															},
															"nodeType": "YulIf",
															"src": "4502:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4631:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4646:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4660:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4650:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4675:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4710:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4721:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4706:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4706:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4730:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4685:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4685:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4675:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4462:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4473:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4485:6:6",
														"type": ""
													}
												],
												"src": "4426:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4844:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4890:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4892:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4892:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4892:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4865:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4874:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4861:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4861:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4886:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4857:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4857:32:6"
															},
															"nodeType": "YulIf",
															"src": "4854:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4983:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4998:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5012:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5002:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5027:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5062:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5073:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5058:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5058:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5082:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5037:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5037:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5027:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5110:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5125:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5139:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5129:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5155:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5190:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5201:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5186:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5186:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5210:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5165:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5165:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5155:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4806:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4817:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4829:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4837:6:6",
														"type": ""
													}
												],
												"src": "4761:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5355:194:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5365:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5377:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5388:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5373:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5365:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5439:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5452:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5463:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5448:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5448:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5401:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5401:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5401:65:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5514:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5527:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5538:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5523:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5523:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5476:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5476:66:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5476:66:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5319:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5331:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5339:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5350:4:6",
														"type": ""
													}
												],
												"src": "5241:308:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5651:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5668:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5673:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5661:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5661:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5661:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5689:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5708:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5713:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5704:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5704:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5689:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5623:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5628:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5639:11:6",
														"type": ""
													}
												],
												"src": "5555:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5836:129:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5858:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5866:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5854:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5854:14:6"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f742061207265676973746572656420466163756c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5870:34:6",
																		"type": "",
																		"value": "Caller is not a registered Facul"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5847:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5847:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5847:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5926:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5934:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5922:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5922:15:6"
																	},
																	{
																		"hexValue": "7479206f72204465706172746d656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5939:18:6",
																		"type": "",
																		"value": "ty or Department"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5915:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5915:43:6"
														}
													]
												},
												"name": "store_literal_in_memory_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5828:6:6",
														"type": ""
													}
												],
												"src": "5730:235:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6117:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6127:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6193:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6198:2:6",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6134:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6134:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6127:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6299:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22",
																	"nodeType": "YulIdentifier",
																	"src": "6210:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6210:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6210:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6312:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6323:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6328:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6319:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6319:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6312:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6105:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6113:3:6",
														"type": ""
													}
												],
												"src": "5971:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6514:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6524:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6536:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6547:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6532:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6532:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6524:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6571:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6582:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6567:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6567:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6590:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6596:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6586:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6586:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6560:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6560:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6616:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6750:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6624:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6616:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6494:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6509:4:6",
														"type": ""
													}
												],
												"src": "6343:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6874:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6896:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6904:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6892:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6892:14:6"
																	},
																	{
																		"hexValue": "5265636f726420616c726561647920657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6908:23:6",
																		"type": "",
																		"value": "Record already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6885:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6885:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6885:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6866:6:6",
														"type": ""
													}
												],
												"src": "6768:171:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7091:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7101:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7167:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7172:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7108:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7108:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7101:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7273:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4",
																	"nodeType": "YulIdentifier",
																	"src": "7184:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7184:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7184:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7286:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7297:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7302:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7293:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7286:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7079:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7087:3:6",
														"type": ""
													}
												],
												"src": "6945:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7488:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7498:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7510:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7521:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7506:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7506:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7498:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7545:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7556:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7541:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7564:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7570:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7534:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7534:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7534:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7590:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7724:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7598:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7598:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7590:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7468:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7483:4:6",
														"type": ""
													}
												],
												"src": "7317:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7868:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7878:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7890:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7901:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7886:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7886:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7878:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7958:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7971:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7982:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7967:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7967:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7914:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7914:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7914:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8039:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8052:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8063:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8048:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8048:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7995:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7995:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7995:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7832:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7844:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7852:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7863:4:6",
														"type": ""
													}
												],
												"src": "7742:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8186:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8208:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8216:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8204:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8204:14:6"
																	},
																	{
																		"hexValue": "5265636f726420646f6573206e6f74206578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8220:23:6",
																		"type": "",
																		"value": "Record does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8197:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8197:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8197:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8178:6:6",
														"type": ""
													}
												],
												"src": "8080:171:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8403:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8413:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8479:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8420:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8420:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8413:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8585:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																	"nodeType": "YulIdentifier",
																	"src": "8496:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8496:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8496:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8598:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8609:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8614:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8605:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8605:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8598:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8391:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8399:3:6",
														"type": ""
													}
												],
												"src": "8257:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8800:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8810:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8822:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8833:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8818:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8818:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8810:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8857:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8868:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8853:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8853:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8876:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8882:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8872:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8872:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8846:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8846:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8846:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8902:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9036:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8910:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8910:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8902:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8780:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8795:4:6",
														"type": ""
													}
												],
												"src": "8629:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9160:68:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9182:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9190:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9178:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9178:14:6"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a656420746f207265766f6b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9194:26:6",
																		"type": "",
																		"value": "Not authorized to revoke"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9171:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9171:50:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9171:50:6"
														}
													]
												},
												"name": "store_literal_in_memory_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9152:6:6",
														"type": ""
													}
												],
												"src": "9054:174:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9380:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9390:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9456:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9461:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9397:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9397:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9390:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9562:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429",
																	"nodeType": "YulIdentifier",
																	"src": "9473:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9473:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9473:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9575:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9586:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9591:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9582:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9582:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9575:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9368:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9376:3:6",
														"type": ""
													}
												],
												"src": "9234:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9777:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9787:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9799:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9810:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9795:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9795:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9787:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9834:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9845:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9830:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9830:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9853:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9859:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9849:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9849:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9823:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9823:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9823:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9879:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10013:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9887:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9887:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9879:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9757:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9772:4:6",
														"type": ""
													}
												],
												"src": "9606:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10137:69:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10159:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10167:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10155:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10155:14:6"
																	},
																	{
																		"hexValue": "5265636f726420697320616c7265616479207265766f6b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10171:27:6",
																		"type": "",
																		"value": "Record is already revoked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10148:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10148:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10148:51:6"
														}
													]
												},
												"name": "store_literal_in_memory_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10129:6:6",
														"type": ""
													}
												],
												"src": "10031:175:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10358:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10368:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10434:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10439:2:6",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10375:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10375:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10368:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10540:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65",
																	"nodeType": "YulIdentifier",
																	"src": "10451:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10451:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10451:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10553:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10564:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10569:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10560:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10560:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10553:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10346:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10354:3:6",
														"type": ""
													}
												],
												"src": "10212:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10755:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10765:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10777:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10788:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10773:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10773:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10765:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10812:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10823:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10808:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10808:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10831:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10837:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10827:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10827:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10801:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10801:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10801:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10857:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10991:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10865:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10865:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10857:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10735:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10750:4:6",
														"type": ""
													}
												],
												"src": "10584:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11107:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11117:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11129:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11140:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11125:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11125:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11117:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11197:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11210:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11221:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11206:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11206:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11153:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11153:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11153:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11079:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11091:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11102:4:6",
														"type": ""
													}
												],
												"src": "11009:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11363:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11373:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11385:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11396:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11381:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11381:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11373:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11453:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11466:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11477:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11462:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11462:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11409:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11409:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11409:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11534:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11547:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11558:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11543:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11543:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11490:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11490:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11490:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11327:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11339:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11347:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11358:4:6",
														"type": ""
													}
												],
												"src": "11237:332:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_uint256_t_bool__to_t_address_t_bytes32_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not a registered Facul\")\n\n        mstore(add(memPtr, 32), \"ty or Department\")\n\n    }\n\n    function abi_encode_t_stringliteral_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Record already exists\")\n\n    }\n\n    function abi_encode_t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096(memPtr) {\n\n        mstore(add(memPtr, 0), \"Record does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized to revoke\")\n\n    }\n\n    function abi_encode_t_stringliteral_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65(memPtr) {\n\n        mstore(add(memPtr, 0), \"Record is already revoked\")\n\n    }\n\n    function abi_encode_t_stringliteral_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c806369ff43fc116100a0578063996dc0221161006f578063996dc022146102b4578063a217fddf146102d2578063c616c979146102f0578063d547741f1461030c578063f838585f1461032857610109565b806369ff43fc1461022c5780636fe3ceb81461024857806375b238fc1461026657806391d148541461028457610109565b806336568abe116100dc57806336568abe146101bc578063396ff3ed146101d85780633e478509146101f457806363e44e2f1461021057610109565b806301ffc9a71461010d578063213681cd1461013d578063248a9ca3146101705780632f2ff15d146101a0575b5f80fd5b61012760048036038101906101229190610f67565b610359565b6040516101349190610fac565b60405180910390f35b61015760048036038101906101529190610ff8565b6103d2565b6040516101679493929190611089565b60405180910390f35b61018a60048036038101906101859190610ff8565b610438565b60405161019791906110cc565b60405180910390f35b6101ba60048036038101906101b5919061110f565b610454565b005b6101d660048036038101906101d1919061110f565b610476565b005b6101f260048036038101906101ed919061114d565b6104f1565b005b61020e60048036038101906102099190611178565b61054a565b005b61022a6004803603810190610225919061114d565b610753565b005b61024660048036038101906102419190611178565b6107ac565b005b610250610946565b60405161025d91906110cc565b60405180910390f35b61026e61096a565b60405161027b91906110cc565b60405180910390f35b61029e6004803603810190610299919061110f565b61098e565b6040516102ab9190610fac565b60405180910390f35b6102bc6109f1565b6040516102c991906110cc565b60405180910390f35b6102da610a15565b6040516102e791906110cc565b60405180910390f35b61030a60048036038101906103059190610ff8565b610a1b565b005b6103266004803603810190610321919061110f565b610bf6565b005b610342600480360381019061033d9190611178565b610c18565b6040516103509291906111b6565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103cb57506103ca82610c67565b5b9050919050565b5f805f805f60015f8781526020019081526020015f209050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600101548260020154836003015f9054906101000a900460ff169450945094509450509193509193565b5f805f8381526020019081526020015f20600101549050919050565b61045d82610438565b61046681610cd0565b6104708383610ce4565b50505050565b61047e610dcd565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104e2576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104ec8282610dd4565b505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561051b81610cd0565b6105457ff3f9cfff7b46f415da5a492b1718971da203f87c6aae9299e7b408eb83ef8bee83610ce4565b505050565b6105747ff3f9cfff7b46f415da5a492b1718971da203f87c6aae9299e7b408eb83ef8bee3361098e565b806105a557506105a47fe7837d04f36ce0b2f3cc662bf1b2b632a7fbd12ae95199e8bd3dcfbcc440b66b3361098e565b5b6105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db9061125d565b60405180910390fd5b5f60015f8481526020019081526020015f20600201541461063a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610631906112c5565b60405180910390fd5b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020014281526020015f151581525060015f8481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16827f9f98e4a6a613f74715f54d5326cf01190330375c17b05ecd29e22646ba8b14c383426040516107479291906112e3565b60405180910390a35050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561077d81610cd0565b6107a77fe7837d04f36ce0b2f3cc662bf1b2b632a7fbd12ae95199e8bd3dcfbcc440b66b83610ce4565b505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756107d681610cd0565b5f60015f8581526020019081526020015f20600201541461082c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610823906112c5565b60405180910390fd5b60405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020014281526020015f151581525060015f8581526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16837f9f98e4a6a613f74715f54d5326cf01190330375c17b05ecd29e22646ba8b14c384426040516109399291906112e3565b60405180910390a3505050565b7ff3f9cfff7b46f415da5a492b1718971da203f87c6aae9299e7b408eb83ef8bee81565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b7fe7837d04f36ce0b2f3cc662bf1b2b632a7fbd12ae95199e8bd3dcfbcc440b66b81565b5f801b81565b5f60015f8381526020019081526020015f2090505f816002015403610a75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6c90611354565b60405180910390fd5b610a9f7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361098e565b80610af757503373ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610b36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2d906113bc565b60405180910390fd5b806003015f9054906101000a900460ff1615610b87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7e90611424565b60405180910390fd5b6001816003015f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16827fab038451d440a6c29bbaaae9f567b253be209b045b7b76daffaa0a4b38f784a042604051610bea9190611442565b60405180910390a35050565b610bff82610438565b610c0881610cd0565b610c128383610dd4565b50505050565b5f805f60015f8681526020019081526020015f2090505f80826002015414158015610c465750848260010154145b905080826003015f9054906101000a900460ff169350935050509250929050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610ce181610cdc610dcd565b610ebd565b50565b5f610cef838361098e565b610dc35760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610d60610dcd565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610dc7565b5f90505b92915050565b5f33905090565b5f610ddf838361098e565b15610eb3575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610e50610dcd565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610eb7565b5f90505b92915050565b610ec7828261098e565b610f0a5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610f0192919061145b565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f4681610f12565b8114610f50575f80fd5b50565b5f81359050610f6181610f3d565b92915050565b5f60208284031215610f7c57610f7b610f0e565b5b5f610f8984828501610f53565b91505092915050565b5f8115159050919050565b610fa681610f92565b82525050565b5f602082019050610fbf5f830184610f9d565b92915050565b5f819050919050565b610fd781610fc5565b8114610fe1575f80fd5b50565b5f81359050610ff281610fce565b92915050565b5f6020828403121561100d5761100c610f0e565b5b5f61101a84828501610fe4565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61104c82611023565b9050919050565b61105c81611042565b82525050565b61106b81610fc5565b82525050565b5f819050919050565b61108381611071565b82525050565b5f60808201905061109c5f830187611053565b6110a96020830186611062565b6110b6604083018561107a565b6110c36060830184610f9d565b95945050505050565b5f6020820190506110df5f830184611062565b92915050565b6110ee81611042565b81146110f8575f80fd5b50565b5f81359050611109816110e5565b92915050565b5f806040838503121561112557611124610f0e565b5b5f61113285828601610fe4565b9250506020611143858286016110fb565b9150509250929050565b5f6020828403121561116257611161610f0e565b5b5f61116f848285016110fb565b91505092915050565b5f806040838503121561118e5761118d610f0e565b5b5f61119b85828601610fe4565b92505060206111ac85828601610fe4565b9150509250929050565b5f6040820190506111c95f830185610f9d565b6111d66020830184610f9d565b9392505050565b5f82825260208201905092915050565b7f43616c6c6572206973206e6f742061207265676973746572656420466163756c5f8201527f7479206f72204465706172746d656e7400000000000000000000000000000000602082015250565b5f6112476030836111dd565b9150611252826111ed565b604082019050919050565b5f6020820190508181035f8301526112748161123b565b9050919050565b7f5265636f726420616c72656164792065786973747300000000000000000000005f82015250565b5f6112af6015836111dd565b91506112ba8261127b565b602082019050919050565b5f6020820190508181035f8301526112dc816112a3565b9050919050565b5f6040820190506112f65f830185611062565b611303602083018461107a565b9392505050565b7f5265636f726420646f6573206e6f7420657869737400000000000000000000005f82015250565b5f61133e6015836111dd565b91506113498261130a565b602082019050919050565b5f6020820190508181035f83015261136b81611332565b9050919050565b7f4e6f7420617574686f72697a656420746f207265766f6b6500000000000000005f82015250565b5f6113a66018836111dd565b91506113b182611372565b602082019050919050565b5f6020820190508181035f8301526113d38161139a565b9050919050565b7f5265636f726420697320616c7265616479207265766f6b6564000000000000005f82015250565b5f61140e6019836111dd565b9150611419826113da565b602082019050919050565b5f6020820190508181035f83015261143b81611402565b9050919050565b5f6020820190506114555f83018461107a565b92915050565b5f60408201905061146e5f830185611053565b61147b6020830184611062565b939250505056fea2646970667358221220402416f16745134f3992dbc94482cd83de07d362a5e68947d1b57d95f11a9cdc64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69FF43FC GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x996DC022 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x996DC022 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xC616C979 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xF838585F EQ PUSH2 0x328 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x69FF43FC EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x6FE3CEB8 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x284 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x396FF3ED EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x3E478509 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x63E44E2F EQ PUSH2 0x210 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x213681CD EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0x438 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x454 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x114D JUMP JUMPDEST PUSH2 0x753 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x7AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x250 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH2 0x96A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x98E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BC PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x110F JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP3 SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3CB JUMPI POP PUSH2 0x3CA DUP3 PUSH2 0xC67 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x1 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x45D DUP3 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x466 DUP2 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x470 DUP4 DUP4 PUSH2 0xCE4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x47E PUSH2 0xDCD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4EC DUP3 DUP3 PUSH2 0xDD4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x51B DUP2 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x545 PUSH32 0xF3F9CFFF7B46F415DA5A492B1718971DA203F87C6AAE9299E7B408EB83EF8BEE DUP4 PUSH2 0xCE4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x574 PUSH32 0xF3F9CFFF7B46F415DA5A492B1718971DA203F87C6AAE9299E7B408EB83EF8BEE CALLER PUSH2 0x98E JUMP JUMPDEST DUP1 PUSH2 0x5A5 JUMPI POP PUSH2 0x5A4 PUSH32 0xE7837D04F36CE0B2F3CC662BF1B2B632A7FBD12AE95199E8BD3DCFBCC440B66B CALLER PUSH2 0x98E JUMP JUMPDEST JUMPDEST PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x125D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x631 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x9F98E4A6A613F74715F54D5326CF01190330375C17B05ECD29E22646BA8B14C3 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x747 SWAP3 SWAP2 SWAP1 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x77D DUP2 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0x7A7 PUSH32 0xE7837D04F36CE0B2F3CC662BF1B2B632A7FBD12AE95199E8BD3DCFBCC440B66B DUP4 PUSH2 0xCE4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x7D6 DUP2 PUSH2 0xCD0 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD EQ PUSH2 0x82C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x823 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x9F98E4A6A613F74715F54D5326CF01190330375C17B05ECD29E22646BA8B14C3 DUP5 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x939 SWAP3 SWAP2 SWAP1 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0xF3F9CFFF7B46F415DA5A492B1718971DA203F87C6AAE9299E7B408EB83EF8BEE DUP2 JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xE7837D04F36CE0B2F3CC662BF1B2B632A7FBD12AE95199E8BD3DCFBCC440B66B DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SUB PUSH2 0xA75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6C SWAP1 PUSH2 0x1354 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9F PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x98E JUMP JUMPDEST DUP1 PUSH2 0xAF7 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xB36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2D SWAP1 PUSH2 0x13BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7E SWAP1 PUSH2 0x1424 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xAB038451D440A6C29BBAAAE9F567B253BE209B045B7B76DAFFAA0A4B38F784A0 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xBEA SWAP2 SWAP1 PUSH2 0x1442 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBFF DUP3 PUSH2 0x438 JUMP JUMPDEST PUSH2 0xC08 DUP2 PUSH2 0xCD0 JUMP JUMPDEST PUSH2 0xC12 DUP4 DUP4 PUSH2 0xDD4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x1 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP1 DUP3 PUSH1 0x2 ADD SLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xC46 JUMPI POP DUP5 DUP3 PUSH1 0x1 ADD SLOAD EQ JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP4 POP SWAP4 POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCE1 DUP2 PUSH2 0xCDC PUSH2 0xDCD JUMP JUMPDEST PUSH2 0xEBD JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xCEF DUP4 DUP4 PUSH2 0x98E JUMP JUMPDEST PUSH2 0xDC3 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD60 PUSH2 0xDCD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xDC7 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xDDF DUP4 DUP4 PUSH2 0x98E JUMP JUMPDEST ISZERO PUSH2 0xEB3 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE50 PUSH2 0xDCD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEC7 DUP3 DUP3 PUSH2 0x98E JUMP JUMPDEST PUSH2 0xF0A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF01 SWAP3 SWAP2 SWAP1 PUSH2 0x145B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF46 DUP2 PUSH2 0xF12 JUMP JUMPDEST DUP2 EQ PUSH2 0xF50 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF61 DUP2 PUSH2 0xF3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF7C JUMPI PUSH2 0xF7B PUSH2 0xF0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF89 DUP5 DUP3 DUP6 ADD PUSH2 0xF53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA6 DUP2 PUSH2 0xF92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFBF PUSH0 DUP4 ADD DUP5 PUSH2 0xF9D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFD7 DUP2 PUSH2 0xFC5 JUMP JUMPDEST DUP2 EQ PUSH2 0xFE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFF2 DUP2 PUSH2 0xFCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x100D JUMPI PUSH2 0x100C PUSH2 0xF0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x101A DUP5 DUP3 DUP6 ADD PUSH2 0xFE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x104C DUP3 PUSH2 0x1023 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105C DUP2 PUSH2 0x1042 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x106B DUP2 PUSH2 0xFC5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1083 DUP2 PUSH2 0x1071 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x109C PUSH0 DUP4 ADD DUP8 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x10A9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x10B6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x10C3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xF9D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10DF PUSH0 DUP4 ADD DUP5 PUSH2 0x1062 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10EE DUP2 PUSH2 0x1042 JUMP JUMPDEST DUP2 EQ PUSH2 0x10F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1109 DUP2 PUSH2 0x10E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0xF0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1132 DUP6 DUP3 DUP7 ADD PUSH2 0xFE4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1143 DUP6 DUP3 DUP7 ADD PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1162 JUMPI PUSH2 0x1161 PUSH2 0xF0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x116F DUP5 DUP3 DUP6 ADD PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x118E JUMPI PUSH2 0x118D PUSH2 0xF0E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x119B DUP6 DUP3 DUP7 ADD PUSH2 0xFE4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11AC DUP6 DUP3 DUP7 ADD PUSH2 0xFE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11C9 PUSH0 DUP4 ADD DUP6 PUSH2 0xF9D JUMP JUMPDEST PUSH2 0x11D6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF9D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F742061207265676973746572656420466163756C PUSH0 DUP3 ADD MSTORE PUSH32 0x7479206F72204465706172746D656E7400000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1247 PUSH1 0x30 DUP4 PUSH2 0x11DD JUMP JUMPDEST SWAP2 POP PUSH2 0x1252 DUP3 PUSH2 0x11ED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1274 DUP2 PUSH2 0x123B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265636F726420616C7265616479206578697374730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12AF PUSH1 0x15 DUP4 PUSH2 0x11DD JUMP JUMPDEST SWAP2 POP PUSH2 0x12BA DUP3 PUSH2 0x127B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x12DC DUP2 PUSH2 0x12A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12F6 PUSH0 DUP4 ADD DUP6 PUSH2 0x1062 JUMP JUMPDEST PUSH2 0x1303 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x107A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265636F726420646F6573206E6F742065786973740000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x133E PUSH1 0x15 DUP4 PUSH2 0x11DD JUMP JUMPDEST SWAP2 POP PUSH2 0x1349 DUP3 PUSH2 0x130A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x136B DUP2 PUSH2 0x1332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F207265766F6B650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13A6 PUSH1 0x18 DUP4 PUSH2 0x11DD JUMP JUMPDEST SWAP2 POP PUSH2 0x13B1 DUP3 PUSH2 0x1372 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13D3 DUP2 PUSH2 0x139A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265636F726420697320616C7265616479207265766F6B656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x140E PUSH1 0x19 DUP4 PUSH2 0x11DD JUMP JUMPDEST SWAP2 POP PUSH2 0x1419 DUP3 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x143B DUP2 PUSH2 0x1402 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1455 PUSH0 DUP4 ADD DUP5 PUSH2 0x107A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x146E PUSH0 DUP4 ADD DUP6 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x147B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1062 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x24 AND CALL PUSH8 0x45134F3992DBC944 DUP3 0xCD DUP4 0xDE SMOD 0xD3 PUSH3 0xA5E689 SELFBALANCE 0xD1 0xB5 PUSH30 0x95F11A9CDC64736F6C634300081400330000000000000000000000000000 ",
							"sourceMap": "324:5586:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4932:304:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;3786:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5304:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1946:119:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2662:704;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2202:131;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3664:513;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;560:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;438:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;722:70:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4396:528:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4618:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5632:275:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2541:202:0;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;4932:304:5:-;5007:14;5032:16;5059;5086:12;5117:16;5136:7;:22;5144:13;5136:22;;;;;;;;;;;5117:41;;5177:1;:15;;;;;;;;;;;;5194:1;:10;;;5206:1;:10;;;5218:1;:9;;;;;;;;;;;;5169:59;;;;;;;;;4932:304;;;;;:::o;3786:120:0:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;4202:136::-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;5304:245::-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;1946:119:5:-;475:23;2473:16:0;2484:4;2473:10;:16::i;:::-;2024:33:5::1;599:25;2049:7;2024:10;:33::i;:::-;;1946:119:::0;;:::o;2662:704::-;2852:33;599:25;2874:10;2852:7;:33::i;:::-;:73;;;;2889:36;764:28;2914:10;2889:7;:36::i;:::-;2852:73;2844:148;;;;;;;;;;;;:::i;:::-;;;;;;;;;3046:1;3011:7;:22;3019:13;3011:22;;;;;;;;;;;:31;;;:36;3003:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3111:162;;;;;;;;3148:10;3111:162;;;;;;3183:9;3111:162;;;;3217:15;3111:162;;;;3256:5;3111:162;;;;;3086:7;:22;3094:13;3086:22;;;;;;;;;;;:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3319:10;3291:67;;3304:13;3291:67;3331:9;3342:15;3291:67;;;;;;;:::i;:::-;;;;;;;;2662:704;;:::o;2202:131::-;475:23;2473:16:0;2484:4;2473:10;:16::i;:::-;2286:39:5::1;764:28;2314:10;2286;:39::i;:::-;;2202:131:::0;;:::o;3664:513::-;475:23;2473:16:0;2484:4;2473:10;:16::i;:::-;3849:1:5::1;3814:7;:22;3822:13;3814:22;;;;;;;;;;;:31;;;:36;3806:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3914:162;;;;;;;;3951:10;3914:162;;;;;;3986:9;3914:162;;;;4020:15;3914:162;;;;4059:5;3914:162;;;;::::0;3889:7:::1;:22;3897:13;3889:22;;;;;;;;;;;:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4130:10;4102:67;;4115:13;4102:67;4142:9;4153:15;4102:67;;;;;;;:::i;:::-;;;;;;;;3664:513:::0;;;:::o;560:64::-;599:25;560:64;:::o;438:60::-;475:23;438:60;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;722:70:5:-;764:28;722:70;:::o;2196:49:0:-;2241:4;2196:49;;;:::o;4396:528:5:-;4461:16;4480:7;:22;4488:13;4480:22;;;;;;;;;;;4461:41;;4535:1;4521;:10;;;:15;4513:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;4646:31;475:23;4666:10;4646:7;:31::i;:::-;:66;;;;4701:10;4682:29;;:1;:15;;;;;;;;;;;;:29;;;4646:66;4638:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;4775:1;:9;;;;;;;;;;;;4774:10;4766:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;4839:4;4827:1;:9;;;:16;;;;;;;;;;;;;;;;;;4888:10;4859:57;;4873:13;4859:57;4900:15;4859:57;;;;;;:::i;:::-;;;;;;;;4450:474;4396:528;:::o;4618:138:0:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;5632:275:5:-;5719:4;5725;5742:16;5761:7;:22;5769:13;5761:22;;;;;;;;;;;5742:41;;5794:16;5828:1;5814;:10;;;:15;;:42;;;;;5847:9;5833:1;:10;;;:23;5814:42;5794:63;;5876:11;5889:1;:9;;;;;;;;;;;;5868:31;;;;;;5632:275;;;;;:::o;730:146:3:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;3175:103:0:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;6708:317:0:-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;3408:197::-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;88:117:6:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:126::-;2246:7;2286:42;2279:5;2275:54;2264:65;;2209:126;;;:::o;2341:96::-;2378:7;2407:24;2425:5;2407:24;:::i;:::-;2396:35;;2341:96;;;:::o;2443:118::-;2530:24;2548:5;2530:24;:::i;:::-;2525:3;2518:37;2443:118;;:::o;2567:::-;2654:24;2672:5;2654:24;:::i;:::-;2649:3;2642:37;2567:118;;:::o;2691:77::-;2728:7;2757:5;2746:16;;2691:77;;;:::o;2774:118::-;2861:24;2879:5;2861:24;:::i;:::-;2856:3;2849:37;2774:118;;:::o;2898:541::-;3069:4;3107:3;3096:9;3092:19;3084:27;;3121:71;3189:1;3178:9;3174:17;3165:6;3121:71;:::i;:::-;3202:72;3270:2;3259:9;3255:18;3246:6;3202:72;:::i;:::-;3284;3352:2;3341:9;3337:18;3328:6;3284:72;:::i;:::-;3366:66;3428:2;3417:9;3413:18;3404:6;3366:66;:::i;:::-;2898:541;;;;;;;:::o;3445:222::-;3538:4;3576:2;3565:9;3561:18;3553:26;;3589:71;3657:1;3646:9;3642:17;3633:6;3589:71;:::i;:::-;3445:222;;;;:::o;3673:122::-;3746:24;3764:5;3746:24;:::i;:::-;3739:5;3736:35;3726:63;;3785:1;3782;3775:12;3726:63;3673:122;:::o;3801:139::-;3847:5;3885:6;3872:20;3863:29;;3901:33;3928:5;3901:33;:::i;:::-;3801:139;;;;:::o;3946:474::-;4014:6;4022;4071:2;4059:9;4050:7;4046:23;4042:32;4039:119;;;4077:79;;:::i;:::-;4039:119;4197:1;4222:53;4267:7;4258:6;4247:9;4243:22;4222:53;:::i;:::-;4212:63;;4168:117;4324:2;4350:53;4395:7;4386:6;4375:9;4371:22;4350:53;:::i;:::-;4340:63;;4295:118;3946:474;;;;;:::o;4426:329::-;4485:6;4534:2;4522:9;4513:7;4509:23;4505:32;4502:119;;;4540:79;;:::i;:::-;4502:119;4660:1;4685:53;4730:7;4721:6;4710:9;4706:22;4685:53;:::i;:::-;4675:63;;4631:117;4426:329;;;;:::o;4761:474::-;4829:6;4837;4886:2;4874:9;4865:7;4861:23;4857:32;4854:119;;;4892:79;;:::i;:::-;4854:119;5012:1;5037:53;5082:7;5073:6;5062:9;5058:22;5037:53;:::i;:::-;5027:63;;4983:117;5139:2;5165:53;5210:7;5201:6;5190:9;5186:22;5165:53;:::i;:::-;5155:63;;5110:118;4761:474;;;;;:::o;5241:308::-;5350:4;5388:2;5377:9;5373:18;5365:26;;5401:65;5463:1;5452:9;5448:17;5439:6;5401:65;:::i;:::-;5476:66;5538:2;5527:9;5523:18;5514:6;5476:66;:::i;:::-;5241:308;;;;;:::o;5555:169::-;5639:11;5673:6;5668:3;5661:19;5713:4;5708:3;5704:14;5689:29;;5555:169;;;;:::o;5730:235::-;5870:34;5866:1;5858:6;5854:14;5847:58;5939:18;5934:2;5926:6;5922:15;5915:43;5730:235;:::o;5971:366::-;6113:3;6134:67;6198:2;6193:3;6134:67;:::i;:::-;6127:74;;6210:93;6299:3;6210:93;:::i;:::-;6328:2;6323:3;6319:12;6312:19;;5971:366;;;:::o;6343:419::-;6509:4;6547:2;6536:9;6532:18;6524:26;;6596:9;6590:4;6586:20;6582:1;6571:9;6567:17;6560:47;6624:131;6750:4;6624:131;:::i;:::-;6616:139;;6343:419;;;:::o;6768:171::-;6908:23;6904:1;6896:6;6892:14;6885:47;6768:171;:::o;6945:366::-;7087:3;7108:67;7172:2;7167:3;7108:67;:::i;:::-;7101:74;;7184:93;7273:3;7184:93;:::i;:::-;7302:2;7297:3;7293:12;7286:19;;6945:366;;;:::o;7317:419::-;7483:4;7521:2;7510:9;7506:18;7498:26;;7570:9;7564:4;7560:20;7556:1;7545:9;7541:17;7534:47;7598:131;7724:4;7598:131;:::i;:::-;7590:139;;7317:419;;;:::o;7742:332::-;7863:4;7901:2;7890:9;7886:18;7878:26;;7914:71;7982:1;7971:9;7967:17;7958:6;7914:71;:::i;:::-;7995:72;8063:2;8052:9;8048:18;8039:6;7995:72;:::i;:::-;7742:332;;;;;:::o;8080:171::-;8220:23;8216:1;8208:6;8204:14;8197:47;8080:171;:::o;8257:366::-;8399:3;8420:67;8484:2;8479:3;8420:67;:::i;:::-;8413:74;;8496:93;8585:3;8496:93;:::i;:::-;8614:2;8609:3;8605:12;8598:19;;8257:366;;;:::o;8629:419::-;8795:4;8833:2;8822:9;8818:18;8810:26;;8882:9;8876:4;8872:20;8868:1;8857:9;8853:17;8846:47;8910:131;9036:4;8910:131;:::i;:::-;8902:139;;8629:419;;;:::o;9054:174::-;9194:26;9190:1;9182:6;9178:14;9171:50;9054:174;:::o;9234:366::-;9376:3;9397:67;9461:2;9456:3;9397:67;:::i;:::-;9390:74;;9473:93;9562:3;9473:93;:::i;:::-;9591:2;9586:3;9582:12;9575:19;;9234:366;;;:::o;9606:419::-;9772:4;9810:2;9799:9;9795:18;9787:26;;9859:9;9853:4;9849:20;9845:1;9834:9;9830:17;9823:47;9887:131;10013:4;9887:131;:::i;:::-;9879:139;;9606:419;;;:::o;10031:175::-;10171:27;10167:1;10159:6;10155:14;10148:51;10031:175;:::o;10212:366::-;10354:3;10375:67;10439:2;10434:3;10375:67;:::i;:::-;10368:74;;10451:93;10540:3;10451:93;:::i;:::-;10569:2;10564:3;10560:12;10553:19;;10212:366;;;:::o;10584:419::-;10750:4;10788:2;10777:9;10773:18;10765:26;;10837:9;10831:4;10827:20;10823:1;10812:9;10808:17;10801:47;10865:131;10991:4;10865:131;:::i;:::-;10857:139;;10584:419;;;:::o;11009:222::-;11102:4;11140:2;11129:9;11125:18;11117:26;;11153:71;11221:1;11210:9;11206:17;11197:6;11153:71;:::i;:::-;11009:222;;;;:::o;11237:332::-;11358:4;11396:2;11385:9;11381:18;11373:26;;11409:71;11477:1;11466:9;11462:17;11453:6;11409:71;:::i;:::-;11490:72;11558:2;11547:9;11543:18;11534:6;11490:72;:::i;:::-;11237:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1060800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "392",
								"DEFAULT_ADMIN_ROLE()": "374",
								"DEPARTMENT_ROLE()": "347",
								"FACULTY_ROLE()": "370",
								"addDepartment(address)": "infinite",
								"addFaculty(address)": "infinite",
								"getRecord(bytes32)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3211",
								"issueInstitutionalRecord(bytes32,bytes32)": "infinite",
								"issueRecord(bytes32,bytes32)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRecord(bytes32)": "35610",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"verifyRecord(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 324,
									"end": 5910,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 324,
									"end": 5910,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 5910,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1771,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1771,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1771,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1771,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1651,
									"end": 1771,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1771,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1651,
									"end": 1771,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1771,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1771,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1651,
									"end": 1771,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1651,
									"end": 1771,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1676,
									"end": 1718,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1687,
									"end": 1705,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1687,
									"end": 1705,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1707,
									"end": 1717,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1676,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1676,
									"end": 1686,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1676,
									"end": 1686,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1676,
									"end": 1718,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1676,
									"end": 1718,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1676,
									"end": 1718,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1676,
									"end": 1718,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1676,
									"end": 1718,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1676,
									"end": 1718,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1729,
									"end": 1763,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 475,
									"end": 498,
									"name": "PUSH",
									"source": 5,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 1752,
									"end": 1762,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1729,
									"end": 1739,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1729,
									"end": 1739,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1729,
									"end": 1739,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1729,
									"end": 1763,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1729,
									"end": 1763,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1729,
									"end": 1763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1729,
									"end": 1763,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1729,
									"end": 1763,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1729,
									"end": 1763,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 324,
									"end": 5910,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 324,
									"end": 5910,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6261,
									"end": 6265,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6267,
									"end": 6274,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6312,
									"end": 6319,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2941,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2951,
									"end": 2958,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2830,
									"end": 2966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 324,
									"end": 5910,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 324,
									"end": 5910,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 324,
									"end": 5910,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 5910,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 324,
									"end": 5910,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 5910,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 5910,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 324,
									"end": 5910,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 5910,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220402416f16745134f3992dbc94482cd83de07d362a5e68947d1b57d95f11a9cdc64736f6c63430008140033",
									".code": [
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "69FF43FC"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "996DC022"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "996DC022"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "A217FDDF"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "C616C979"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "D547741F"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "F838585F"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "69FF43FC"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "6FE3CEB8"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "75B238FC"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "91D14854"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "36568ABE"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "36568ABE"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "396FF3ED"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "3E478509"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "63E44E2F"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A7"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "213681CD"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "248A9CA3"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "2F2FF15D"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 324,
											"end": 5910,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4932,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4932,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 4932,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1946,
											"end": 2065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1946,
											"end": 2065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2662,
											"end": 3366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2662,
											"end": 3366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2202,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2202,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3664,
											"end": 4177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3664,
											"end": 4177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 560,
											"end": 624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 560,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 560,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 560,
											"end": 624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 624,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 560,
											"end": 624,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 560,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 560,
											"end": 624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 624,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 438,
											"end": 498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 438,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 438,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 438,
											"end": 498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 498,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 438,
											"end": 498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 438,
											"end": 498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 438,
											"end": 498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 498,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 722,
											"end": 792,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 722,
											"end": 792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 722,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 722,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 722,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 722,
											"end": 792,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 722,
											"end": 792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 722,
											"end": 792,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 792,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 722,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 722,
											"end": 792,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 722,
											"end": 792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 722,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 722,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 722,
											"end": 792,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 722,
											"end": 792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 722,
											"end": 792,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 792,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 722,
											"end": 792,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 722,
											"end": 792,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 722,
											"end": 792,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 722,
											"end": 792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 722,
											"end": 792,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4396,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4396,
											"end": 4924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 5632,
											"end": 5907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 5632,
											"end": 5907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5632,
											"end": 5907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5059,
											"end": 5075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5133,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5143,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5136,
											"end": 5158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5144,
											"end": 5157,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5158,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5158,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5158,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5136,
											"end": 5158,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5158,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5158,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5158,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5158,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5136,
											"end": 5158,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5158,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5158,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5204,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5194,
											"end": 5204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5204,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5207,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5216,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5206,
											"end": 5216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5216,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5219,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5218,
											"end": 5227,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5169,
											"end": 5228,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5169,
											"end": 5228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5169,
											"end": 5228,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5169,
											"end": 5228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5169,
											"end": 5228,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5169,
											"end": 5228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5169,
											"end": 5228,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5169,
											"end": 5228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5169,
											"end": 5228,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 475,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 599,
											"end": 624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "F3F9CFFF7B46F415DA5A492B1718971DA203F87C6AAE9299E7B408EB83EF8BEE"
										},
										{
											"begin": 2049,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2024,
											"end": 2057,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2057,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2024,
											"end": 2057,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2057,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1946,
											"end": 2065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "F3F9CFFF7B46F415DA5A492B1718971DA203F87C6AAE9299E7B408EB83EF8BEE"
										},
										{
											"begin": 2874,
											"end": 2884,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2852,
											"end": 2885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2885,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2852,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2852,
											"end": 2925,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 764,
											"end": 792,
											"name": "PUSH",
											"source": 5,
											"value": "E7837D04F36CE0B2F3CC662BF1B2B632A7FBD12AE95199E8BD3DCFBCC440B66B"
										},
										{
											"begin": 2914,
											"end": 2924,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2889,
											"end": 2925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2889,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2852,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2844,
											"end": 2992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2844,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3046,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3018,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3032,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3033,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3011,
											"end": 3042,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3042,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3011,
											"end": 3047,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3003,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3003,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3158,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3192,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3232,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3256,
											"end": 3261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3111,
											"end": 3273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3086,
											"end": 3108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3107,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3108,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3108,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3108,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3319,
											"end": 3329,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3304,
											"end": 3317,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "PUSH",
											"source": 5,
											"value": "9F98E4A6A613F74715F54D5326CF01190330375C17B05ECD29E22646BA8B14C3"
										},
										{
											"begin": 3331,
											"end": 3340,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3342,
											"end": 3357,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3291,
											"end": 3358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3291,
											"end": 3358,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 3366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 475,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 764,
											"end": 792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E7837D04F36CE0B2F3CC662BF1B2B632A7FBD12AE95199E8BD3DCFBCC440B66B"
										},
										{
											"begin": 2314,
											"end": 2324,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2286,
											"end": 2325,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2286,
											"end": 2325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2325,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 475,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3849,
											"end": 3850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3821,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3814,
											"end": 3836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3835,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3836,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3836,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3836,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3836,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3836,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3836,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3836,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3836,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3814,
											"end": 3845,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3850,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3806,
											"end": 3876,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3806,
											"end": 3876,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3951,
											"end": 3961,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3986,
											"end": 3995,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4035,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 4076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 3896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3889,
											"end": 3911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3910,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 3911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 3911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 3911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 3911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 3911,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 3911,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 3911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 3911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 3911,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3889,
											"end": 4076,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4140,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4115,
											"end": 4128,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9F98E4A6A613F74715F54D5326CF01190330375C17B05ECD29E22646BA8B14C3"
										},
										{
											"begin": 4142,
											"end": 4151,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4153,
											"end": 4168,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4102,
											"end": 4169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4102,
											"end": 4169,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 4177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 560,
											"end": 624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 599,
											"end": 624,
											"name": "PUSH",
											"source": 5,
											"value": "F3F9CFFF7B46F415DA5A492B1718971DA203F87C6AAE9299E7B408EB83EF8BEE"
										},
										{
											"begin": 560,
											"end": 624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 560,
											"end": 624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 438,
											"end": 498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 475,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 438,
											"end": 498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 438,
											"end": 498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 722,
											"end": 792,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 722,
											"end": 792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 764,
											"end": 792,
											"name": "PUSH",
											"source": 5,
											"value": "E7837D04F36CE0B2F3CC662BF1B2B632A7FBD12AE95199E8BD3DCFBCC440B66B"
										},
										{
											"begin": 722,
											"end": 792,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 722,
											"end": 792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4487,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4501,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4502,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4535,
											"end": 4536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4521,
											"end": 4522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4521,
											"end": 4531,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4521,
											"end": 4531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4521,
											"end": 4531,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4521,
											"end": 4536,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4513,
											"end": 4562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 4513,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 475,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 4646,
											"end": 4677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4677,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4646,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4712,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4646,
											"end": 4712,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4701,
											"end": 4711,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4711,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4682,
											"end": 4711,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4682,
											"end": 4697,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4711,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4682,
											"end": 4711,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 4711,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4712,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4646,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4638,
											"end": 4755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4775,
											"end": 4776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4774,
											"end": 4784,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4766,
											"end": 4814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4766,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4839,
											"end": 4843,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4827,
											"end": 4828,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4836,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4827,
											"end": 4836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4898,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4873,
											"end": 4886,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "PUSH",
											"source": 5,
											"value": "AB038451D440A6C29BBAAAE9F567B253BE209B045B7B76DAFFAA0A4B38F784A0"
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4859,
											"end": 4916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4916,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5719,
											"end": 5723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5761,
											"end": 5768,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5761,
											"end": 5783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5782,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5783,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5783,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5761,
											"end": 5783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5783,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5783,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5761,
											"end": 5783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5761,
											"end": 5783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5761,
											"end": 5783,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5794,
											"end": 5810,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5829,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5824,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5814,
											"end": 5824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5824,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5829,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5829,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5856,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5856,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5814,
											"end": 5856,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5847,
											"end": 5856,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5833,
											"end": 5834,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5833,
											"end": 5843,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5833,
											"end": 5843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5833,
											"end": 5843,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5833,
											"end": 5856,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5856,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 5814,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5794,
											"end": 5857,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5794,
											"end": 5857,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 5887,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5868,
											"end": 5899,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5868,
											"end": 5899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5868,
											"end": 5899,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5868,
											"end": 5899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5868,
											"end": 5899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5868,
											"end": 5899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2246,
											"end": 2253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2328,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2279,
											"end": 2284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2275,
											"end": 2329,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2209,
											"end": 2335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2425,
											"end": 2430,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2407,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2431,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2396,
											"end": 2431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2437,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2548,
											"end": 2553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2530,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2530,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2518,
											"end": 2555,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2685,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 2567,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2672,
											"end": 2677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2654,
											"end": 2678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2678,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2654,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2652,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2679,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2768,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2691,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2762,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2768,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2768,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2892,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2774,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2879,
											"end": 2884,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2861,
											"end": 2885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2861,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2859,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2886,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 3439,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2898,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3110,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3096,
											"end": 3105,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3111,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3121,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3187,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3191,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3171,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3121,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3121,
											"end": 3192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3121,
											"end": 3192,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 3121,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 3270,
											"end": 3272,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3246,
											"end": 3252,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3202,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3274,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 3202,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3284,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3352,
											"end": 3354,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3341,
											"end": 3350,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3337,
											"end": 3355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3334,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3284,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3284,
											"end": 3356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3284,
											"end": 3356,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3284,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3428,
											"end": 3430,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3417,
											"end": 3426,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3366,
											"end": 3432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3432,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 3366,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 3439,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 3439,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 3439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 3439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 3439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 3439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 3439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2898,
											"end": 3439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3667,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3445,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3542,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3574,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3655,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3642,
											"end": 3659,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3639,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3589,
											"end": 3660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3660,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 3589,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3667,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3667,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3667,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3667,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3673,
											"end": 3795,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3673,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3746,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3746,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3746,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3746,
											"end": 3770,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3746,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3739,
											"end": 3744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3771,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3726,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 3726,
											"end": 3789,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 3786,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3787,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3726,
											"end": 3789,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 3726,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3673,
											"end": 3795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3673,
											"end": 3795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3940,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3801,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3892,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3928,
											"end": 3933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3901,
											"end": 3934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3934,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3901,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3940,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3940,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4420,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3946,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4014,
											"end": 4020,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4071,
											"end": 4073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4059,
											"end": 4068,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4050,
											"end": 4057,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4069,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4042,
											"end": 4074,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4158,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 4039,
											"end": 4158,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4077,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 4077,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4156,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4077,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4039,
											"end": 4158,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 4039,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 4267,
											"end": 4274,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4264,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4256,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4243,
											"end": 4265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4222,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 4222,
											"end": 4275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4222,
											"end": 4275,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 4222,
											"end": 4275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4212,
											"end": 4275,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4212,
											"end": 4275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4168,
											"end": 4285,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4326,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4350,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 4395,
											"end": 4402,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4386,
											"end": 4392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4375,
											"end": 4384,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4350,
											"end": 4403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 4403,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 4350,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4340,
											"end": 4403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4340,
											"end": 4403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4295,
											"end": 4413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4420,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4420,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4755,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4426,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4491,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4536,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4522,
											"end": 4531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4513,
											"end": 4520,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4509,
											"end": 4532,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4505,
											"end": 4537,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4502,
											"end": 4621,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4502,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 4502,
											"end": 4621,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4540,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4540,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 4540,
											"end": 4619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4540,
											"end": 4619,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4540,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4502,
											"end": 4621,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 4502,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4660,
											"end": 4661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4685,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4730,
											"end": 4737,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4721,
											"end": 4727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4710,
											"end": 4719,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4685,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 4685,
											"end": 4738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4685,
											"end": 4738,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 4685,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 4738,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 4738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4755,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4755,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 5235,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4761,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 4843,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4888,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4872,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 4884,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4857,
											"end": 4889,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4854,
											"end": 4973,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4854,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4854,
											"end": 4973,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4892,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 4892,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 4892,
											"end": 4971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4892,
											"end": 4971,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 4892,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4854,
											"end": 4973,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4854,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5037,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5082,
											"end": 5089,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5073,
											"end": 5079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5062,
											"end": 5071,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5037,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 5037,
											"end": 5090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5037,
											"end": 5090,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5037,
											"end": 5090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5027,
											"end": 5090,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5027,
											"end": 5090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 5100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5141,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5165,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5210,
											"end": 5217,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5190,
											"end": 5199,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5186,
											"end": 5208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 5165,
											"end": 5218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5218,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5165,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5155,
											"end": 5218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5155,
											"end": 5218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 5235,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 5235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 5235,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 5235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 5235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4761,
											"end": 5235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5549,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 5241,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5350,
											"end": 5354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 5390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5377,
											"end": 5386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5373,
											"end": 5391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5365,
											"end": 5391,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5463,
											"end": 5464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5461,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5448,
											"end": 5465,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5445,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5401,
											"end": 5466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5401,
											"end": 5466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5476,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5538,
											"end": 5540,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5527,
											"end": 5536,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5514,
											"end": 5520,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5476,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5476,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5476,
											"end": 5542,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5476,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5724,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 5555,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5639,
											"end": 5650,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5679,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5661,
											"end": 5680,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5717,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5708,
											"end": 5711,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5718,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5724,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5555,
											"end": 5724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5730,
											"end": 5965,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 5730,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5904,
											"name": "PUSH",
											"source": 6,
											"value": "43616C6C6572206973206E6F742061207265676973746572656420466163756C"
										},
										{
											"begin": 5866,
											"end": 5867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5858,
											"end": 5864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 5868,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5847,
											"end": 5905,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5939,
											"end": 5957,
											"name": "PUSH",
											"source": 6,
											"value": "7479206F72204465706172746D656E7400000000000000000000000000000000"
										},
										{
											"begin": 5934,
											"end": 5936,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5922,
											"end": 5937,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5730,
											"end": 5965,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5730,
											"end": 5965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 6337,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 5971,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6113,
											"end": 6116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6134,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 6198,
											"end": 6200,
											"name": "PUSH",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 6193,
											"end": 6196,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6134,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 6134,
											"end": 6201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6134,
											"end": 6201,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 6134,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6127,
											"end": 6201,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6127,
											"end": 6201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6210,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6210,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 6210,
											"end": 6303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6210,
											"end": 6303,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6210,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6330,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6323,
											"end": 6326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6319,
											"end": 6331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 6331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6312,
											"end": 6331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 6337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 6337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 6337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5971,
											"end": 6337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6343,
											"end": 6762,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 6343,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6536,
											"end": 6545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6596,
											"end": 6605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6590,
											"end": 6594,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 6606,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6567,
											"end": 6584,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6560,
											"end": 6607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6624,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6750,
											"end": 6754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6624,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 6624,
											"end": 6755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6624,
											"end": 6755,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6624,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 6755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 6755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6343,
											"end": 6762,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6343,
											"end": 6762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6343,
											"end": 6762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6343,
											"end": 6762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6768,
											"end": 6939,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6768,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6908,
											"end": 6931,
											"name": "PUSH",
											"source": 6,
											"value": "5265636F726420616C7265616479206578697374730000000000000000000000"
										},
										{
											"begin": 6904,
											"end": 6905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6896,
											"end": 6902,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6892,
											"end": 6906,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6885,
											"end": 6932,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6768,
											"end": 6939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6768,
											"end": 6939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7090,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 7172,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 7167,
											"end": 7170,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7108,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 7108,
											"end": 7175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7108,
											"end": 7175,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 7108,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7101,
											"end": 7175,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7101,
											"end": 7175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7184,
											"end": 7277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7273,
											"end": 7276,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7184,
											"end": 7277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 7184,
											"end": 7277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7184,
											"end": 7277,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7184,
											"end": 7277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7302,
											"end": 7304,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7297,
											"end": 7300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7305,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7286,
											"end": 7305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7286,
											"end": 7305,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6945,
											"end": 7311,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6945,
											"end": 7311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7483,
											"end": 7487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7523,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7510,
											"end": 7519,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7498,
											"end": 7524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7570,
											"end": 7579,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7564,
											"end": 7568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7560,
											"end": 7580,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7556,
											"end": 7557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7541,
											"end": 7558,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7534,
											"end": 7581,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7598,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 7724,
											"end": 7728,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7598,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 7598,
											"end": 7729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7598,
											"end": 7729,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 7598,
											"end": 7729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 8074,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 7742,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7863,
											"end": 7867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7901,
											"end": 7903,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7890,
											"end": 7899,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7886,
											"end": 7904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 7904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7878,
											"end": 7904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7914,
											"end": 7985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 7982,
											"end": 7983,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7971,
											"end": 7980,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 7984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7958,
											"end": 7964,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7914,
											"end": 7985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 7914,
											"end": 7985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7914,
											"end": 7985,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 7914,
											"end": 7985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7995,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 8063,
											"end": 8065,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8052,
											"end": 8061,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8048,
											"end": 8066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8039,
											"end": 8045,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7995,
											"end": 8067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7995,
											"end": 8067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7995,
											"end": 8067,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 7995,
											"end": 8067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 8074,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 8074,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 8074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 8074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 8074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7742,
											"end": 8074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8080,
											"end": 8251,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 8080,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8220,
											"end": 8243,
											"name": "PUSH",
											"source": 6,
											"value": "5265636F726420646F6573206E6F742065786973740000000000000000000000"
										},
										{
											"begin": 8216,
											"end": 8217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8204,
											"end": 8218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8197,
											"end": 8244,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8080,
											"end": 8251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8080,
											"end": 8251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8623,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 8257,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8399,
											"end": 8402,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8484,
											"end": 8486,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 8479,
											"end": 8482,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8420,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8420,
											"end": 8487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8420,
											"end": 8487,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8420,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8413,
											"end": 8487,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8413,
											"end": 8487,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8496,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8585,
											"end": 8588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8496,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 8496,
											"end": 8589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8496,
											"end": 8589,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8496,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8614,
											"end": 8616,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8609,
											"end": 8612,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8598,
											"end": 8617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8598,
											"end": 8617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8623,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8629,
											"end": 9048,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 8629,
											"end": 9048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8833,
											"end": 8835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8822,
											"end": 8831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8818,
											"end": 8836,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8810,
											"end": 8836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8810,
											"end": 8836,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8882,
											"end": 8891,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8876,
											"end": 8880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8872,
											"end": 8892,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8868,
											"end": 8869,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8857,
											"end": 8866,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8853,
											"end": 8870,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8846,
											"end": 8893,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8910,
											"end": 9041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 9036,
											"end": 9040,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8910,
											"end": 9041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 8910,
											"end": 9041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8910,
											"end": 9041,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8910,
											"end": 9041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8902,
											"end": 9041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8902,
											"end": 9041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8629,
											"end": 9048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8629,
											"end": 9048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8629,
											"end": 9048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8629,
											"end": 9048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9054,
											"end": 9228,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 9054,
											"end": 9228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9194,
											"end": 9220,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F7420617574686F72697A656420746F207265766F6B650000000000000000"
										},
										{
											"begin": 9190,
											"end": 9191,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9182,
											"end": 9188,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9178,
											"end": 9192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9171,
											"end": 9221,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9054,
											"end": 9228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9054,
											"end": 9228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9234,
											"end": 9600,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9234,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9376,
											"end": 9379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9397,
											"end": 9464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 9461,
											"end": 9463,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 9456,
											"end": 9459,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9397,
											"end": 9464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 9397,
											"end": 9464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9397,
											"end": 9464,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 9397,
											"end": 9464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9390,
											"end": 9464,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9390,
											"end": 9464,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9473,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 9562,
											"end": 9565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9473,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 9473,
											"end": 9566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9473,
											"end": 9566,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 9473,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9591,
											"end": 9593,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9586,
											"end": 9589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9582,
											"end": 9594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9575,
											"end": 9594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9575,
											"end": 9594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9234,
											"end": 9600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9234,
											"end": 9600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9234,
											"end": 9600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9234,
											"end": 9600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 10025,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 9606,
											"end": 10025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9810,
											"end": 9812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9799,
											"end": 9808,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9787,
											"end": 9813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9787,
											"end": 9813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9859,
											"end": 9868,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9853,
											"end": 9857,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9849,
											"end": 9869,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9845,
											"end": 9846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9834,
											"end": 9843,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9830,
											"end": 9847,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9823,
											"end": 9870,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 10013,
											"end": 10017,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 9887,
											"end": 10018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 10018,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 9887,
											"end": 10018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9879,
											"end": 10018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9879,
											"end": 10018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 10025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 10025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 10025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9606,
											"end": 10025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10031,
											"end": 10206,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 10031,
											"end": 10206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10171,
											"end": 10198,
											"name": "PUSH",
											"source": 6,
											"value": "5265636F726420697320616C7265616479207265766F6B656400000000000000"
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10165,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10155,
											"end": 10169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10148,
											"end": 10199,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10031,
											"end": 10206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10031,
											"end": 10206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10578,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 10212,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10354,
											"end": 10357,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10375,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 10439,
											"end": 10441,
											"name": "PUSH",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 10434,
											"end": 10437,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10375,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 10375,
											"end": 10442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10375,
											"end": 10442,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 10375,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10368,
											"end": 10442,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10368,
											"end": 10442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10451,
											"end": 10544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 10540,
											"end": 10543,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10451,
											"end": 10544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 10451,
											"end": 10544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10451,
											"end": 10544,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 10451,
											"end": 10544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10569,
											"end": 10571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10564,
											"end": 10567,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10560,
											"end": 10572,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10553,
											"end": 10572,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10553,
											"end": 10572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10578,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10212,
											"end": 10578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10584,
											"end": 11003,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 10584,
											"end": 11003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10788,
											"end": 10790,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10777,
											"end": 10786,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10773,
											"end": 10791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 10791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 10791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10837,
											"end": 10846,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10831,
											"end": 10835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10827,
											"end": 10847,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10824,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10812,
											"end": 10821,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10801,
											"end": 10848,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10865,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10991,
											"end": 10995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10865,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 10865,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10865,
											"end": 10996,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10865,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10857,
											"end": 10996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10857,
											"end": 10996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10584,
											"end": 11003,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10584,
											"end": 11003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10584,
											"end": 11003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10584,
											"end": 11003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11231,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 11009,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11102,
											"end": 11106,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11140,
											"end": 11142,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11129,
											"end": 11138,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11125,
											"end": 11143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11117,
											"end": 11143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11117,
											"end": 11143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 11221,
											"end": 11222,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11210,
											"end": 11219,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11206,
											"end": 11223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11197,
											"end": 11203,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 11153,
											"end": 11224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11224,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 11153,
											"end": 11224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11231,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11231,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11569,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 11237,
											"end": 11569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11396,
											"end": 11398,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11385,
											"end": 11394,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11381,
											"end": 11399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11373,
											"end": 11399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11373,
											"end": 11399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11409,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 11477,
											"end": 11478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11466,
											"end": 11475,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11462,
											"end": 11479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11453,
											"end": 11459,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11409,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 11409,
											"end": 11480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11409,
											"end": 11480,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 11409,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11490,
											"end": 11562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 11558,
											"end": 11560,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11547,
											"end": 11556,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11543,
											"end": 11561,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11534,
											"end": 11540,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11490,
											"end": 11562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 11490,
											"end": 11562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11490,
											"end": 11562,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 11490,
											"end": 11562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11569,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11569,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"SIH_Project Contract/CertRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DEPARTMENT_ROLE()": "996dc022",
							"FACULTY_ROLE()": "6fe3ceb8",
							"addDepartment(address)": "63e44e2f",
							"addFaculty(address)": "396ff3ed",
							"getRecord(bytes32)": "213681cd",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"issueInstitutionalRecord(bytes32,bytes32)": "69ff43fc",
							"issueRecord(bytes32,bytes32)": "3e478509",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRecord(bytes32)": "c616c979",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"verifyRecord(bytes32,bytes32)": "f838585f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"recordIdHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"}],\"name\":\"RecordIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"recordIdHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revokedAt\",\"type\":\"uint256\"}],\"name\":\"RecordRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEPARTMENT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FACULTY_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"department\",\"type\":\"address\"}],\"name\":\"addDepartment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"faculty\",\"type\":\"address\"}],\"name\":\"addFaculty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_recordIdHash\",\"type\":\"bytes32\"}],\"name\":\"getRecord\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"issuedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"revoked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_recordIdHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_fileHash\",\"type\":\"bytes32\"}],\"name\":\"issueInstitutionalRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_recordIdHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_fileHash\",\"type\":\"bytes32\"}],\"name\":\"issueRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_recordIdHash\",\"type\":\"bytes32\"}],\"name\":\"revokeRecord\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_recordIdHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_fileHash\",\"type\":\"bytes32\"}],\"name\":\"verifyRecord\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract manages the immutable registry of verified certificates and records. Access is restricted to designated roles (Admin, Faculty, Department).\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"addDepartment(address)\":{\"details\":\"Adds a new address to the list of Departments.\",\"params\":{\"department\":\"The address to be added.\"}},\"addFaculty(address)\":{\"details\":\"Adds a new address to the list of Faculty.\",\"params\":{\"faculty\":\"The address to be added.\"}},\"constructor\":{\"details\":\"The contract deployer is set as the initial admin.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"issueInstitutionalRecord(bytes32,bytes32)\":{\"details\":\"Only a registered admin can call this function.\",\"params\":{\"_fileHash\":\"The hash of the PDF report itself.\",\"_recordIdHash\":\"The unique hash of the off-chain report ID.\"}},\"issueRecord(bytes32,bytes32)\":{\"details\":\"Only Faculty or Department can call this function.\",\"params\":{\"_fileHash\":\"The hash of the file (e.g., PDF) being certified.\",\"_recordIdHash\":\"The unique hash of the off-chain record ID.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRecord(bytes32)\":{\"details\":\"Can only be called by the original issuer or a contract admin.\",\"params\":{\"_recordIdHash\":\"The unique hash of the off-chain record ID.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"verifyRecord(bytes32,bytes32)\":{\"details\":\"This function is critical for off-chain verification processes.\",\"params\":{\"_fileHash\":\"The hash of the file to verify.\",\"_recordIdHash\":\"The unique hash of the off-chain record ID.\"},\"returns\":{\"_0\":\"A boolean indicating if the record is valid, and a boolean if it has been revoked.\"}}},\"title\":\"CertRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"issueInstitutionalRecord(bytes32,bytes32)\":{\"notice\":\"Issues a new institutional record, such as a NAAC report.\"},\"issueRecord(bytes32,bytes32)\":{\"notice\":\"Issues a new student or general record.\"},\"revokeRecord(bytes32)\":{\"notice\":\"Revokes an existing record.\"},\"verifyRecord(bytes32,bytes32)\":{\"notice\":\"Verifies a record's existence and authenticity.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SIH_Project Contract/CertRegistry.sol\":\"CertRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"SIH_Project Contract/CertRegistry.sol\":{\"keccak256\":\"0xe098891e116fd29d1af5d07885271db2befe072139b5db015d4d1a2bf0f2b6c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1c9f960ec01997becf404af9e4ae8bac835ca7926a93d8c28f259bcba3ba9d1\",\"dweb:/ipfs/QmUoC2mzELSxf2GJcVVd5DDe5bfncrBFXWtzuq62d6HeAc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "SIH_Project Contract/CertRegistry.sol:CertRegistry",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 471,
								"contract": "SIH_Project Contract/CertRegistry.sol:CertRegistry",
								"label": "records",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(Record)480_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(Record)480_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct CertRegistry.Record)",
								"numberOfBytes": "32",
								"value": "t_struct(Record)480_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(Record)480_storage": {
								"encoding": "inplace",
								"label": "struct CertRegistry.Record",
								"members": [
									{
										"astId": 473,
										"contract": "SIH_Project Contract/CertRegistry.sol:CertRegistry",
										"label": "issuerAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 475,
										"contract": "SIH_Project Contract/CertRegistry.sol:CertRegistry",
										"label": "fileHash",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									},
									{
										"astId": 477,
										"contract": "SIH_Project Contract/CertRegistry.sol:CertRegistry",
										"label": "issuedAt",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 479,
										"contract": "SIH_Project Contract/CertRegistry.sol:CertRegistry",
										"label": "revoked",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "SIH_Project Contract/CertRegistry.sol:CertRegistry",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "SIH_Project Contract/CertRegistry.sol:CertRegistry",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"issueInstitutionalRecord(bytes32,bytes32)": {
								"notice": "Issues a new institutional record, such as a NAAC report."
							},
							"issueRecord(bytes32,bytes32)": {
								"notice": "Issues a new student or general record."
							},
							"revokeRecord(bytes32)": {
								"notice": "Revokes an existing record."
							},
							"verifyRecord(bytes32,bytes32)": {
								"notice": "Verifies a record's existence and authenticity."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							409
						],
						"ERC165": [
							433
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							445
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 410,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 409,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 434,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 445,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 433,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 433,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								433,
								445,
								379,
								409
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										432
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 432,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 382,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 387,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 386,
												"id": 389,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 409,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 396,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 395,
												"id": 398,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 409,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 404,
												"id": 406,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 409,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 410,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							433
						],
						"IERC165": [
							445
						]
					},
					"id": 434,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 413,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 434,
							"sourceUnit": 446,
							"src": "140:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 412,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 445,
										"src": "148:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 415,
										"name": "IERC165",
										"nameLocations": [
											"688:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 445,
										"src": "688:7:3"
									},
									"id": 416,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:3"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 414,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 433,
							"linearizedBaseContracts": [
								433,
								445
							],
							"name": "ERC165",
							"nameLocation": "678:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										444
									],
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "812:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 424,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "829:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 426,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "849:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$445_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$445_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 425,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$445",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:3",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 423,
												"id": 430,
												"nodeType": "Return",
												"src": "822:47:3"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:3",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "757:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 418,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:3"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "806:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:3"
									},
									"scope": 433,
									"src": "730:146:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 434,
							"src": "660:218:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							445
						]
					},
					"id": 446,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 435,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 436,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:4",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 445,
							"linearizedBaseContracts": [
								445
							],
							"name": "IERC165",
							"nameLocation": "433:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "819:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 438,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:4"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "862:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:4"
									},
									"scope": 445,
									"src": "792:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 446,
							"src": "423:447:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:4"
				},
				"id": 4
			},
			"SIH_Project Contract/CertRegistry.sol": {
				"ast": {
					"absolutePath": "SIH_Project Contract/CertRegistry.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"CertRegistry": [
							774
						],
						"Context": [
							409
						],
						"ERC165": [
							433
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							445
						]
					},
					"id": 775,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 447,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 448,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 775,
							"sourceUnit": 297,
							"src": "61:58:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 450,
										"name": "AccessControl",
										"nameLocations": [
											"349:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "349:13:5"
									},
									"id": 451,
									"nodeType": "InheritanceSpecifier",
									"src": "349:13:5"
								}
							],
							"canonicalName": "CertRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 449,
								"nodeType": "StructuredDocumentation",
								"src": "123:199:5",
								"text": " @title CertRegistry\n @dev This contract manages the immutable registry of verified certificates and records.\n Access is restricted to designated roles (Admin, Faculty, Department)."
							},
							"fullyImplemented": true,
							"id": 774,
							"linearizedBaseContracts": [
								774,
								296,
								433,
								445,
								379,
								409
							],
							"name": "CertRegistry",
							"nameLocation": "333:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 456,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "462:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 774,
									"src": "438:60:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 452,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "438:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 454,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "485:12:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 453,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "475:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 455,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "475:23:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6fe3ceb8",
									"id": 461,
									"mutability": "constant",
									"name": "FACULTY_ROLE",
									"nameLocation": "584:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 774,
									"src": "560:64:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 457,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "560:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "464143554c54595f524f4c45",
												"id": 459,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "609:14:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f3f9cfff7b46f415da5a492b1718971da203f87c6aae9299e7b408eb83ef8bee",
													"typeString": "literal_string \"FACULTY_ROLE\""
												},
												"value": "FACULTY_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_f3f9cfff7b46f415da5a492b1718971da203f87c6aae9299e7b408eb83ef8bee",
													"typeString": "literal_string \"FACULTY_ROLE\""
												}
											],
											"id": 458,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "599:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "599:25:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "996dc022",
									"id": 466,
									"mutability": "constant",
									"name": "DEPARTMENT_ROLE",
									"nameLocation": "746:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 774,
									"src": "722:70:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 462,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "722:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4445504152544d454e545f524f4c45",
												"id": 464,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "774:17:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_e7837d04f36ce0b2f3cc662bf1b2b632a7fbd12ae95199e8bd3dcfbcc440b66b",
													"typeString": "literal_string \"DEPARTMENT_ROLE\""
												},
												"value": "DEPARTMENT_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_e7837d04f36ce0b2f3cc662bf1b2b632a7fbd12ae95199e8bd3dcfbcc440b66b",
													"typeString": "literal_string \"DEPARTMENT_ROLE\""
												}
											],
											"id": 463,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "764:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 465,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "764:28:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 471,
									"mutability": "mutable",
									"name": "records",
									"nameLocation": "935:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 774,
									"src": "900:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Record_$480_storage_$",
										"typeString": "mapping(bytes32 => struct CertRegistry.Record)"
									},
									"typeName": {
										"id": 470,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 467,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "908:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "900:26:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Record_$480_storage_$",
											"typeString": "mapping(bytes32 => struct CertRegistry.Record)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 469,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 468,
												"name": "Record",
												"nameLocations": [
													"919:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 480,
												"src": "919:6:5"
											},
											"referencedDeclaration": 480,
											"src": "919:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
												"typeString": "struct CertRegistry.Record"
											}
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "CertRegistry.Record",
									"id": 480,
									"members": [
										{
											"constant": false,
											"id": 473,
											"mutability": "mutable",
											"name": "issuerAddress",
											"nameLocation": "1016:13:5",
											"nodeType": "VariableDeclaration",
											"scope": 480,
											"src": "1008:21:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 472,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 475,
											"mutability": "mutable",
											"name": "fileHash",
											"nameLocation": "1048:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 480,
											"src": "1040:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 474,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1040:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 477,
											"mutability": "mutable",
											"name": "issuedAt",
											"nameLocation": "1075:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 480,
											"src": "1067:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 476,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1067:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 479,
											"mutability": "mutable",
											"name": "revoked",
											"nameLocation": "1099:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 480,
											"src": "1094:12:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 478,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1094:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Record",
									"nameLocation": "990:6:5",
									"nodeType": "StructDefinition",
									"scope": 774,
									"src": "983:131:5",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9f98e4a6a613f74715f54d5326cf01190330375c17b05ecd29e22646ba8b14c3",
									"id": 490,
									"name": "RecordIssued",
									"nameLocation": "1209:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"indexed": true,
												"mutability": "mutable",
												"name": "recordIdHash",
												"nameLocation": "1248:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1232:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 481,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1287:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1271:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"indexed": false,
												"mutability": "mutable",
												"name": "fileHash",
												"nameLocation": "1312:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1304:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 485,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1304:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"indexed": false,
												"mutability": "mutable",
												"name": "issuedAt",
												"nameLocation": "1339:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1331:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1331:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:133:5"
									},
									"src": "1203:152:5"
								},
								{
									"anonymous": false,
									"eventSelector": "ab038451d440a6c29bbaaae9f567b253be209b045b7b76daffaa0a4b38f784a0",
									"id": 498,
									"name": "RecordRevoked",
									"nameLocation": "1411:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"indexed": true,
												"mutability": "mutable",
												"name": "recordIdHash",
												"nameLocation": "1451:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1435:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 491,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"indexed": true,
												"mutability": "mutable",
												"name": "revoker",
												"nameLocation": "1490:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1474:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"indexed": false,
												"mutability": "mutable",
												"name": "revokedAt",
												"nameLocation": "1516:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1508:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:108:5"
									},
									"src": "1405:128:5"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "1665:106:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 503,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "1687:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 504,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1707:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1711:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1707:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 502,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1676:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1676:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "1676:42:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 509,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "1740:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 510,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1752:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1756:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1752:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 508,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1729:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1729:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "1729:34:5"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "1569:76:5",
										"text": " @dev The contract deployer is set as the initial admin."
									},
									"id": 515,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1662:2:5"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:5"
									},
									"scope": 774,
									"src": "1651:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "2013:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 525,
															"name": "FACULTY_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "2035:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 526,
															"name": "faculty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "2049:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 524,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2024:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2024:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "2024:33:5"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "1824:116:5",
										"text": " @dev Adds a new address to the list of Faculty.\n @param faculty The address to be added."
									},
									"functionSelector": "396ff3ed",
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 521,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 456,
													"src": "2001:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 522,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 520,
												"name": "onlyRole",
												"nameLocations": [
													"1992:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1992:8:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1992:20:5"
										}
									],
									"name": "addFaculty",
									"nameLocation": "1955:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "faculty",
												"nameLocation": "1974:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1966:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1966:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1965:17:5"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2013:0:5"
									},
									"scope": 774,
									"src": "1946:119:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2275:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "DEPARTMENT_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "2297:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 541,
															"name": "department",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "2314:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 539,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2286:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2286:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "2286:39:5"
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "2073:123:5",
										"text": " @dev Adds a new address to the list of Departments.\n @param department The address to be added."
									},
									"functionSelector": "63e44e2f",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 536,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 456,
													"src": "2263:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 537,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 535,
												"name": "onlyRole",
												"nameLocations": [
													"2254:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "2254:8:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2254:20:5"
										}
									],
									"name": "addDepartment",
									"nameLocation": "2211:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "department",
												"nameLocation": "2233:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2225:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:20:5"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2275:0:5"
									},
									"scope": 774,
									"src": "2202:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "2759:607:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 555,
																		"name": "FACULTY_ROLE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 461,
																		"src": "2860:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"expression": {
																			"id": 556,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2874:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2878:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2874:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 554,
																	"name": "hasRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "2852:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view returns (bool)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2852:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 560,
																		"name": "DEPARTMENT_ROLE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "2897:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"expression": {
																			"id": 561,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2914:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2918:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2914:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 559,
																	"name": "hasRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "2889:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view returns (bool)"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2889:36:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2852:73:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f742061207265676973746572656420466163756c7479206f72204465706172746d656e74",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2941:50:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22",
																"typeString": "literal_string \"Caller is not a registered Faculty or Department\""
															},
															"value": "Caller is not a registered Faculty or Department"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e3654bf6c3b3f87d8cf1612afeda2570aec34de88c2093910c19c2c4f721f22",
																"typeString": "literal_string \"Caller is not a registered Faculty or Department\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2844:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:148:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "2844:148:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 569,
																		"name": "records",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 471,
																		"src": "3011:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Record_$480_storage_$",
																			"typeString": "mapping(bytes32 => struct CertRegistry.Record storage ref)"
																		}
																	},
																	"id": 571,
																	"indexExpression": {
																		"id": 570,
																		"name": "_recordIdHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "3019:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3011:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Record_$480_storage",
																		"typeString": "struct CertRegistry.Record storage ref"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3034:8:5",
																"memberName": "issuedAt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 477,
																"src": "3011:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3046:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3011:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420616c726561647920657869737473",
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3049:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4",
																"typeString": "literal_string \"Record already exists\""
															},
															"value": "Record already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4",
																"typeString": "literal_string \"Record already exists\""
															}
														],
														"id": 568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3003:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3003:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "3003:70:5"
											},
											{
												"expression": {
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 578,
															"name": "records",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "3086:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Record_$480_storage_$",
																"typeString": "mapping(bytes32 => struct CertRegistry.Record storage ref)"
															}
														},
														"id": 580,
														"indexExpression": {
															"id": 579,
															"name": "_recordIdHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "3094:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3086:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Record_$480_storage",
															"typeString": "struct CertRegistry.Record storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 582,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3148:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3152:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3148:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 584,
																"name": "_fileHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "3183:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"expression": {
																	"id": 585,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3217:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3223:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3217:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3256:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 581,
															"name": "Record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3111:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Record_$480_storage_ptr_$",
																"typeString": "type(struct CertRegistry.Record storage pointer)"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3133:13:5",
															"3173:8:5",
															"3207:8:5",
															"3247:7:5"
														],
														"names": [
															"issuerAddress",
															"fileHash",
															"issuedAt",
															"revoked"
														],
														"nodeType": "FunctionCall",
														"src": "3111:162:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Record_$480_memory_ptr",
															"typeString": "struct CertRegistry.Record memory"
														}
													},
													"src": "3086:187:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Record_$480_storage",
														"typeString": "struct CertRegistry.Record storage ref"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "3086:187:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 592,
															"name": "_recordIdHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "3304:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 593,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3319:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3323:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3319:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 595,
															"name": "_fileHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3331:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 596,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3342:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3348:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3342:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 591,
														"name": "RecordIssued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "3291:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,bytes32,uint256)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3291:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 599,
												"nodeType": "EmitStatement",
												"src": "3286:72:5"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "2376:280:5",
										"text": " @notice Issues a new student or general record.\n @dev Only Faculty or Department can call this function.\n @param _recordIdHash The unique hash of the off-chain record ID.\n @param _fileHash The hash of the file (e.g., PDF) being certified."
									},
									"functionSelector": "3e478509",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "issueRecord",
									"nameLocation": "2671:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "_recordIdHash",
												"nameLocation": "2701:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2693:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 547,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "_fileHash",
												"nameLocation": "2733:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2725:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 549,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:67:5"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2759:0:5"
									},
									"scope": 774,
									"src": "2662:704:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "3795:382:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 613,
																		"name": "records",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 471,
																		"src": "3814:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Record_$480_storage_$",
																			"typeString": "mapping(bytes32 => struct CertRegistry.Record storage ref)"
																		}
																	},
																	"id": 615,
																	"indexExpression": {
																		"id": 614,
																		"name": "_recordIdHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "3822:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3814:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Record_$480_storage",
																		"typeString": "struct CertRegistry.Record storage ref"
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3837:8:5",
																"memberName": "issuedAt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 477,
																"src": "3814:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3849:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3814:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420616c726561647920657869737473",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3852:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4",
																"typeString": "literal_string \"Record already exists\""
															},
															"value": "Record already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c261c1c8b9181d0ce37c878e96e780fc88a4dee2d11b128015f58d02d15f27d4",
																"typeString": "literal_string \"Record already exists\""
															}
														],
														"id": 612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3806:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3806:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "3806:70:5"
											},
											{
												"expression": {
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 622,
															"name": "records",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "3889:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Record_$480_storage_$",
																"typeString": "mapping(bytes32 => struct CertRegistry.Record storage ref)"
															}
														},
														"id": 624,
														"indexExpression": {
															"id": 623,
															"name": "_recordIdHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "3897:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3889:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Record_$480_storage",
															"typeString": "struct CertRegistry.Record storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 626,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3951:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3955:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3951:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 628,
																"name": "_fileHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "3986:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"expression": {
																	"id": 629,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4020:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4026:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4020:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4059:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 625,
															"name": "Record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3914:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Record_$480_storage_ptr_$",
																"typeString": "type(struct CertRegistry.Record storage pointer)"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3936:13:5",
															"3976:8:5",
															"4010:8:5",
															"4050:7:5"
														],
														"names": [
															"issuerAddress",
															"fileHash",
															"issuedAt",
															"revoked"
														],
														"nodeType": "FunctionCall",
														"src": "3914:162:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Record_$480_memory_ptr",
															"typeString": "struct CertRegistry.Record memory"
														}
													},
													"src": "3889:187:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Record_$480_storage",
														"typeString": "struct CertRegistry.Record storage ref"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "3889:187:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 636,
															"name": "_recordIdHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4115:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 637,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4130:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4134:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4130:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "_fileHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "4142:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 640,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4153:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4159:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4153:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 635,
														"name": "RecordIssued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "4102:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,bytes32,uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4102:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "EmitStatement",
												"src": "4097:72:5"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "3378:280:5",
										"text": " @notice Issues a new institutional record, such as a NAAC report.\n @dev Only a registered admin can call this function.\n @param _recordIdHash The unique hash of the off-chain report ID.\n @param _fileHash The hash of the PDF report itself."
									},
									"functionSelector": "69ff43fc",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 609,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 456,
													"src": "3783:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 610,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 608,
												"name": "onlyRole",
												"nameLocations": [
													"3774:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "3774:8:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3774:20:5"
										}
									],
									"name": "issueInstitutionalRecord",
									"nameLocation": "3673:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "_recordIdHash",
												"nameLocation": "3716:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "3708:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 603,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "_fileHash",
												"nameLocation": "3748:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "3740:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 605,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3740:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3697:67:5"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3795:0:5"
									},
									"scope": 774,
									"src": "3664:513:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "4450:474:5",
										"statements": [
											{
												"assignments": [
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "4476:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 703,
														"src": "4461:16:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
															"typeString": "struct CertRegistry.Record"
														},
														"typeName": {
															"id": 652,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 651,
																"name": "Record",
																"nameLocations": [
																	"4461:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 480,
																"src": "4461:6:5"
															},
															"referencedDeclaration": 480,
															"src": "4461:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
																"typeString": "struct CertRegistry.Record"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"baseExpression": {
														"id": 654,
														"name": "records",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "4480:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Record_$480_storage_$",
															"typeString": "mapping(bytes32 => struct CertRegistry.Record storage ref)"
														}
													},
													"id": 656,
													"indexExpression": {
														"id": 655,
														"name": "_recordIdHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "4488:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4480:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Record_$480_storage",
														"typeString": "struct CertRegistry.Record storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4461:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 659,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "4521:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
																		"typeString": "struct CertRegistry.Record storage pointer"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4523:8:5",
																"memberName": "issuedAt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 477,
																"src": "4521:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4535:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4521:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420646f6573206e6f74206578697374",
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4538:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															},
															"value": "Record does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_752d09c2eab74c4a5f1bd63acead0a9ceb7b9a35d294a71b52bc967447850096",
																"typeString": "literal_string \"Record does not exist\""
															}
														],
														"id": 658,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4513:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4513:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "4513:49:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 668,
																		"name": "ADMIN_ROLE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "4654:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"expression": {
																			"id": 669,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4666:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4670:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4666:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 667,
																	"name": "hasRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "4646:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view returns (bool)"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4646:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 672,
																				"name": "r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 653,
																				"src": "4682:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
																					"typeString": "struct CertRegistry.Record storage pointer"
																				}
																			},
																			"id": 673,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4684:13:5",
																			"memberName": "issuerAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 473,
																			"src": "4682:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 674,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4701:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4705:6:5",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4701:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "4682:29:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 677,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4681:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4646:66:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a656420746f207265766f6b65",
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4728:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429",
																"typeString": "literal_string \"Not authorized to revoke\""
															},
															"value": "Not authorized to revoke"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f490d309c44677867c970e811e96ba352a8cfd8d68212832bc31e895cbe5e429",
																"typeString": "literal_string \"Not authorized to revoke\""
															}
														],
														"id": 666,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4638:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4638:117:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "4638:117:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4774:10:5",
															"subExpression": {
																"expression": {
																	"id": 683,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "4775:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
																		"typeString": "struct CertRegistry.Record storage pointer"
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4777:7:5",
																"memberName": "revoked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 479,
																"src": "4775:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265636f726420697320616c7265616479207265766f6b6564",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4786:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65",
																"typeString": "literal_string \"Record is already revoked\""
															},
															"value": "Record is already revoked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9d0cda5350cfa09754fa7eefd875ec3a3a2079a2587efd879afcae3e859ec65",
																"typeString": "literal_string \"Record is already revoked\""
															}
														],
														"id": 682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4766:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4766:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "4766:48:5"
											},
											{
												"expression": {
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 689,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "4827:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
																"typeString": "struct CertRegistry.Record storage pointer"
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4829:7:5",
														"memberName": "revoked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 479,
														"src": "4827:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4839:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4827:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "4827:16:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 696,
															"name": "_recordIdHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "4873:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 697,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4888:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4892:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4888:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 699,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4900:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4906:9:5",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4900:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 695,
														"name": "RecordRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "4859:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4859:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "EmitStatement",
												"src": "4854:62:5"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "4185:205:5",
										"text": " @notice Revokes an existing record.\n @dev Can only be called by the original issuer or a contract admin.\n @param _recordIdHash The unique hash of the off-chain record ID."
									},
									"functionSelector": "c616c979",
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRecord",
									"nameLocation": "4405:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "_recordIdHash",
												"nameLocation": "4426:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "4418:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 647,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:23:5"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4450:0:5"
									},
									"scope": 774,
									"src": "4396:528:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "5106:130:5",
										"statements": [
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "5132:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "5117:16:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
															"typeString": "struct CertRegistry.Record"
														},
														"typeName": {
															"id": 718,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 717,
																"name": "Record",
																"nameLocations": [
																	"5117:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 480,
																"src": "5117:6:5"
															},
															"referencedDeclaration": 480,
															"src": "5117:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
																"typeString": "struct CertRegistry.Record"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"baseExpression": {
														"id": 720,
														"name": "records",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "5136:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Record_$480_storage_$",
															"typeString": "mapping(bytes32 => struct CertRegistry.Record storage ref)"
														}
													},
													"id": 722,
													"indexExpression": {
														"id": 721,
														"name": "_recordIdHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "5144:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5136:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Record_$480_storage",
														"typeString": "struct CertRegistry.Record storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5117:41:5"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 724,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "5177:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
																	"typeString": "struct CertRegistry.Record storage pointer"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5179:13:5",
															"memberName": "issuerAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 473,
															"src": "5177:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 726,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "5194:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
																	"typeString": "struct CertRegistry.Record storage pointer"
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5196:8:5",
															"memberName": "fileHash",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 475,
															"src": "5194:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 728,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "5206:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
																	"typeString": "struct CertRegistry.Record storage pointer"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5208:8:5",
															"memberName": "issuedAt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 477,
															"src": "5206:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 730,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "5218:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
																	"typeString": "struct CertRegistry.Record storage pointer"
																}
															},
															"id": 731,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "revoked",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 479,
															"src": "5218:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 732,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5176:52:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_bytes32_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(address,bytes32,uint256,bool)"
													}
												},
												"functionReturnParameters": 716,
												"id": 733,
												"nodeType": "Return",
												"src": "5169:59:5"
											}
										]
									},
									"functionSelector": "213681cd",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRecord",
									"nameLocation": "4941:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "_recordIdHash",
												"nameLocation": "4959:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "4951:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 705,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4951:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4950:23:5"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "5015:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "5007:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "fileHash",
												"nameLocation": "5040:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "5032:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 710,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5032:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "issuedAt",
												"nameLocation": "5067:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "5059:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5059:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "revoked",
												"nameLocation": "5091:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "5086:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5086:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4996:109:5"
									},
									"scope": 774,
									"src": "4932:304:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "5731:176:5",
										"statements": [
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "5757:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 772,
														"src": "5742:16:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
															"typeString": "struct CertRegistry.Record"
														},
														"typeName": {
															"id": 748,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 747,
																"name": "Record",
																"nameLocations": [
																	"5742:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 480,
																"src": "5742:6:5"
															},
															"referencedDeclaration": 480,
															"src": "5742:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
																"typeString": "struct CertRegistry.Record"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"baseExpression": {
														"id": 750,
														"name": "records",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "5761:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Record_$480_storage_$",
															"typeString": "mapping(bytes32 => struct CertRegistry.Record storage ref)"
														}
													},
													"id": 752,
													"indexExpression": {
														"id": 751,
														"name": "_recordIdHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "5769:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5761:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Record_$480_storage",
														"typeString": "struct CertRegistry.Record storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5742:41:5"
											},
											{
												"assignments": [
													755
												],
												"declarations": [
													{
														"constant": false,
														"id": 755,
														"mutability": "mutable",
														"name": "isAuthentic",
														"nameLocation": "5799:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 772,
														"src": "5794:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 754,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5794:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 756,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "5814:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
																			"typeString": "struct CertRegistry.Record storage pointer"
																		}
																	},
																	"id": 757,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5816:8:5",
																	"memberName": "issuedAt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 477,
																	"src": "5814:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5828:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5814:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 760,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 749,
																		"src": "5833:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
																			"typeString": "struct CertRegistry.Record storage pointer"
																		}
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5835:8:5",
																	"memberName": "fileHash",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 475,
																	"src": "5833:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 762,
																	"name": "_fileHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "5847:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "5833:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5814:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 765,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5813:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5794:63:5"
											},
											{
												"expression": {
													"components": [
														{
															"id": 767,
															"name": "isAuthentic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "5876:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 768,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "5889:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Record_$480_storage_ptr",
																	"typeString": "struct CertRegistry.Record storage pointer"
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5891:7:5",
															"memberName": "revoked",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 479,
															"src": "5889:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 770,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5875:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
														"typeString": "tuple(bool,bool)"
													}
												},
												"functionReturnParameters": 746,
												"id": 771,
												"nodeType": "Return",
												"src": "5868:31:5"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "5244:382:5",
										"text": " @notice Verifies a record's existence and authenticity.\n @dev This function is critical for off-chain verification processes.\n @param _recordIdHash The unique hash of the off-chain record ID.\n @param _fileHash The hash of the file to verify.\n @return A boolean indicating if the record is valid, and a boolean if it has been revoked."
									},
									"functionSelector": "f838585f",
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyRecord",
									"nameLocation": "5641:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "_recordIdHash",
												"nameLocation": "5662:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "5654:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 737,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5654:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "_fileHash",
												"nameLocation": "5685:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "5677:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 739,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5677:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5653:42:5"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "5719:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5719:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "5725:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 744,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5725:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5718:12:5"
									},
									"scope": 774,
									"src": "5632:275:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 775,
							"src": "324:5586:5",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336,
								490,
								498
							]
						}
					],
					"src": "33:5877:5"
				},
				"id": 5
			}
		}
	}
}